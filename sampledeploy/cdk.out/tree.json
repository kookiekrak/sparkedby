{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "CertificateStack": {
        "id": "CertificateStack",
        "path": "CertificateStack",
        "children": {
          "CertificateHostedZone": {
            "id": "CertificateHostedZone",
            "path": "CertificateStack/CertificateHostedZone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "Certificate": {
            "id": "Certificate",
            "path": "CertificateStack/Certificate",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CertificateStack/Certificate/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CertificateManager::Certificate",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "eastmedical.ai",
                    "domainValidationOptions": [
                      {
                        "domainName": "eastmedical.ai",
                        "hostedZoneId": "Z055778020D8NH7RP81J5"
                      }
                    ],
                    "subjectAlternativeNames": [
                      "*.eastmedical.ai"
                    ],
                    "tags": [
                      {
                        "key": "Name",
                        "value": "CertificateStack/Certificate"
                      }
                    ],
                    "validationMethod": "DNS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_certificatemanager.CfnCertificate",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_certificatemanager.Certificate",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "CertificateArn": {
            "id": "CertificateArn",
            "path": "CertificateStack/CertificateArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "DomainName": {
            "id": "DomainName",
            "path": "CertificateStack/DomainName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "CertificateStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "CertificateStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "ExportsWriteruseast2828FA26B": {
            "id": "ExportsWriteruseast2828FA26B",
            "path": "CertificateStack/ExportsWriteruseast2828FA26B",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CertificateStack/ExportsWriteruseast2828FA26B/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CertificateStack/ExportsWriteruseast2828FA26B/Resource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Custom::CrossRegionExportWriterCustomResourceProvider": {
            "id": "Custom::CrossRegionExportWriterCustomResourceProvider",
            "path": "CertificateStack/Custom::CrossRegionExportWriterCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "CertificateStack/Custom::CrossRegionExportWriterCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.184.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "CertificateStack/Custom::CrossRegionExportWriterCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "CertificateStack/Custom::CrossRegionExportWriterCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.184.1"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "CertificateStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "CertificateStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "SharedInfrastructureStack": {
        "id": "SharedInfrastructureStack",
        "path": "SharedInfrastructureStack",
        "children": {
          "ImportedCertificate": {
            "id": "ImportedCertificate",
            "path": "SharedInfrastructureStack/ImportedCertificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SharedHostedZone": {
            "id": "SharedHostedZone",
            "path": "SharedInfrastructureStack/SharedHostedZone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "RegionalCertificate": {
            "id": "RegionalCertificate",
            "path": "SharedInfrastructureStack/RegionalCertificate",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SharedInfrastructureStack/RegionalCertificate/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CertificateManager::Certificate",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "api.eastmedical.ai",
                    "domainValidationOptions": [
                      {
                        "domainName": "api.eastmedical.ai",
                        "hostedZoneId": "Z055778020D8NH7RP81J5"
                      }
                    ],
                    "tags": [
                      {
                        "key": "Name",
                        "value": "SharedInfrastructureStack/RegionalCertificate"
                      }
                    ],
                    "validationMethod": "DNS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_certificatemanager.CfnCertificate",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_certificatemanager.Certificate",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "VpcFlowLogsGroup": {
            "id": "VpcFlowLogsGroup",
            "path": "SharedInfrastructureStack/VpcFlowLogsGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SharedInfrastructureStack/VpcFlowLogsGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "retentionInDays": 30
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_logs.LogGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SharedVpc": {
            "id": "SharedVpc",
            "path": "SharedInfrastructureStack/SharedVpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SharedInfrastructureStack/SharedVpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "SharedInfrastructureStack/SharedVpc"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                  "version": "2.184.1"
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-2a",
                        "cidrBlock": "10.0.0.0/24",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/publicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.184.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/publicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.184.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "SharedVpcpublicSubnet1RouteTable02281047"
                        },
                        "subnetId": {
                          "Ref": "SharedVpcpublicSubnet1Subnet8B290348"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "SharedVpcIGW869E5885"
                        },
                        "routeTableId": {
                          "Ref": "SharedVpcpublicSubnet1RouteTable02281047"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.184.1"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "2.184.1"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "SharedVpcpublicSubnet1EIP05C300B0",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "SharedVpcpublicSubnet1Subnet8B290348"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "publicSubnet2": {
                "id": "publicSubnet2",
                "path": "SharedInfrastructureStack/SharedVpc/publicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-2b",
                        "cidrBlock": "10.0.1.0/24",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/publicSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.184.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/publicSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.184.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "SharedVpcpublicSubnet2RouteTable7C5D1097"
                        },
                        "subnetId": {
                          "Ref": "SharedVpcpublicSubnet2SubnetE497BB00"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "SharedInfrastructureStack/SharedVpc/publicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "SharedVpcIGW869E5885"
                        },
                        "routeTableId": {
                          "Ref": "SharedVpcpublicSubnet2RouteTable7C5D1097"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "privateSubnet1": {
                "id": "privateSubnet1",
                "path": "SharedInfrastructureStack/SharedVpc/privateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-2a",
                        "cidrBlock": "10.0.2.0/24",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/privateSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.184.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/privateSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.184.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "SharedVpcprivateSubnet1RouteTable51D7A30B"
                        },
                        "subnetId": {
                          "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "SharedVpcpublicSubnet1NATGatewayE91D769E"
                        },
                        "routeTableId": {
                          "Ref": "SharedVpcprivateSubnet1RouteTable51D7A30B"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "privateSubnet2": {
                "id": "privateSubnet2",
                "path": "SharedInfrastructureStack/SharedVpc/privateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-2b",
                        "cidrBlock": "10.0.3.0/24",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/privateSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.184.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/privateSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.184.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "SharedVpcprivateSubnet2RouteTable538229F1"
                        },
                        "subnetId": {
                          "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "SharedInfrastructureStack/SharedVpc/privateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "SharedVpcpublicSubnet1NATGatewayE91D769E"
                        },
                        "routeTableId": {
                          "Ref": "SharedVpcprivateSubnet2RouteTable538229F1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "isolatedSubnet1": {
                "id": "isolatedSubnet1",
                "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-2a",
                        "cidrBlock": "10.0.4.0/28",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "isolated"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Isolated"
                          },
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.184.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.184.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "SharedVpcisolatedSubnet1RouteTable2D80C6D9"
                        },
                        "subnetId": {
                          "Ref": "SharedVpcisolatedSubnet1Subnet0A8AF9AC"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "isolatedSubnet2": {
                "id": "isolatedSubnet2",
                "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": "us-east-2b",
                        "cidrBlock": "10.0.4.16/28",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "isolated"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Isolated"
                          },
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.184.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.184.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "SharedInfrastructureStack/SharedVpc/isolatedSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "SharedVpcisolatedSubnet2RouteTableCEB3B7D3"
                        },
                        "subnetId": {
                          "Ref": "SharedVpcisolatedSubnet2SubnetB4E457F8"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "SharedInfrastructureStack/SharedVpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "SharedInfrastructureStack/SharedVpc"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                  "version": "2.184.1"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "SharedInfrastructureStack/SharedVpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "internetGatewayId": {
                      "Ref": "SharedVpcIGW869E5885"
                    },
                    "vpcId": {
                      "Ref": "SharedVpc96F0F614"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                  "version": "2.184.1"
                }
              },
              "FlowLog": {
                "id": "FlowLog",
                "path": "SharedInfrastructureStack/SharedVpc/FlowLog",
                "children": {
                  "IAMRole": {
                    "id": "IAMRole",
                    "path": "SharedInfrastructureStack/SharedVpc/FlowLog/IAMRole",
                    "children": {
                      "ImportIAMRole": {
                        "id": "ImportIAMRole",
                        "path": "SharedInfrastructureStack/SharedVpc/FlowLog/IAMRole/ImportIAMRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/FlowLog/IAMRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "vpc-flow-logs.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "VpcTrafficMonitoring"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.184.1"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "SharedInfrastructureStack/SharedVpc/FlowLog/IAMRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "SharedInfrastructureStack/SharedVpc/FlowLog/IAMRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "VpcFlowLogsGroupC5F6A8C5",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "SharedVpcFlowLogIAMRole993A5F27",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "SharedVpcFlowLogIAMRoleDefaultPolicyAE2F5C34",
                                "roles": [
                                  {
                                    "Ref": "SharedVpcFlowLogIAMRole993A5F27"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.184.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "FlowLog": {
                    "id": "FlowLog",
                    "path": "SharedInfrastructureStack/SharedVpc/FlowLog/FlowLog",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::FlowLog",
                      "aws:cdk:cloudformation:props": {
                        "deliverLogsPermissionArn": {
                          "Fn::GetAtt": [
                            "SharedVpcFlowLogIAMRole993A5F27",
                            "Arn"
                          ]
                        },
                        "logDestinationType": "cloud-watch-logs",
                        "logGroupName": {
                          "Ref": "VpcFlowLogsGroupC5F6A8C5"
                        },
                        "maxAggregationInterval": 60,
                        "resourceId": {
                          "Ref": "SharedVpc96F0F614"
                        },
                        "resourceType": "VPC",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcTrafficMonitoring"
                          }
                        ],
                        "trafficType": "ALL"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnFlowLog",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.FlowLog",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "S3Endpoint": {
                "id": "S3Endpoint",
                "path": "SharedInfrastructureStack/SharedVpc/S3Endpoint",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/S3Endpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "routeTableIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1RouteTable51D7A30B"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2RouteTable538229F1"
                          },
                          {
                            "Ref": "SharedVpcpublicSubnet1RouteTable02281047"
                          },
                          {
                            "Ref": "SharedVpcpublicSubnet2RouteTable7C5D1097"
                          },
                          {
                            "Ref": "SharedVpcisolatedSubnet1RouteTable2D80C6D9"
                          },
                          {
                            "Ref": "SharedVpcisolatedSubnet2RouteTableCEB3B7D3"
                          }
                        ],
                        "serviceName": {
                          "Fn::Join": [
                            "",
                            [
                              "com.amazonaws.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".s3"
                            ]
                          ]
                        },
                        "vpcEndpointType": "Gateway",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.GatewayVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "DynamoEndpoint": {
                "id": "DynamoEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/DynamoEndpoint",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/DynamoEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "routeTableIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1RouteTable51D7A30B"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2RouteTable538229F1"
                          },
                          {
                            "Ref": "SharedVpcpublicSubnet1RouteTable02281047"
                          },
                          {
                            "Ref": "SharedVpcpublicSubnet2RouteTable7C5D1097"
                          },
                          {
                            "Ref": "SharedVpcisolatedSubnet1RouteTable2D80C6D9"
                          },
                          {
                            "Ref": "SharedVpcisolatedSubnet2RouteTableCEB3B7D3"
                          }
                        ],
                        "serviceName": {
                          "Fn::Join": [
                            "",
                            [
                              "com.amazonaws.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".dynamodb"
                            ]
                          ]
                        },
                        "vpcEndpointType": "Gateway",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.GatewayVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "EcrEndpoint": {
                "id": "EcrEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/EcrEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/EcrEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/EcrEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/EcrEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/EcrEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcEcrEndpointSecurityGroup2D339FA4",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.ecr.api",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "EcrDockerEndpoint": {
                "id": "EcrDockerEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/EcrDockerEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/EcrDockerEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/EcrDockerEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/EcrDockerEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/EcrDockerEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcEcrDockerEndpointSecurityGroup041BC8B5",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.ecr.dkr",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "CloudWatchEndpoint": {
                "id": "CloudWatchEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/CloudWatchEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/CloudWatchEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/CloudWatchEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/CloudWatchEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/CloudWatchEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcCloudWatchEndpointSecurityGroupD232AFAD",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.monitoring",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "CloudWatchLogsEndpoint": {
                "id": "CloudWatchLogsEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/CloudWatchLogsEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/CloudWatchLogsEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/CloudWatchLogsEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/CloudWatchLogsEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/CloudWatchLogsEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcCloudWatchLogsEndpointSecurityGroup9AFCD3A4",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.logs",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "SecretsManagerEndpoint": {
                "id": "SecretsManagerEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/SecretsManagerEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/SecretsManagerEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/SecretsManagerEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/SecretsManagerEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/SecretsManagerEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcSecretsManagerEndpointSecurityGroup0AA9D055",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.secretsmanager",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "SQSEndpoint": {
                "id": "SQSEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/SQSEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/SQSEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/SQSEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/SQSEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/SQSEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcSQSEndpointSecurityGroup85D97BCC",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.sqs",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "SSMEndpoint": {
                "id": "SSMEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/SSMEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/SSMEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/SSMEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/SSMEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/SSMEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcSSMEndpointSecurityGroup8DF232A7",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.ssm",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "SSMMessagesEndpoint": {
                "id": "SSMMessagesEndpoint",
                "path": "SharedInfrastructureStack/SharedVpc/SSMMessagesEndpoint",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "SharedInfrastructureStack/SharedVpc/SSMMessagesEndpoint/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SharedInfrastructureStack/SharedVpc/SSMMessagesEndpoint/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "SharedInfrastructureStack/SharedVpc/SSMMessagesEndpoint/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "SharedVpc96F0F614",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "SharedVpc96F0F614",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "SharedInfrastructureStack/SharedVpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "SharedVpc96F0F614"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SharedInfrastructureStack/SharedVpc/SSMMessagesEndpoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "SharedInfrastructureStack/SharedVpc"
                          }
                        ],
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "SharedVpcSSMMessagesEndpointSecurityGroup93607E3A",
                              "GroupId"
                            ]
                          }
                        ],
                        "serviceName": "com.amazonaws.us-east-2.ssmmessages",
                        "subnetIds": [
                          {
                            "Ref": "SharedVpcprivateSubnet1Subnet51E913CA"
                          },
                          {
                            "Ref": "SharedVpcprivateSubnet2Subnet50406F86"
                          }
                        ],
                        "vpcEndpointType": "Interface",
                        "vpcId": {
                          "Ref": "SharedVpc96F0F614"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCEndpoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.InterfaceVpcEndpoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Vpc",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SharedCloudFrontOAC": {
            "id": "SharedCloudFrontOAC",
            "path": "SharedInfrastructureStack/SharedCloudFrontOAC",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CloudFront::OriginAccessControl",
              "aws:cdk:cloudformation:props": {
                "originAccessControlConfig": {
                  "name": "SharedInfrastructure-SharedOAC-1743025243137",
                  "signingBehavior": "always",
                  "signingProtocol": "sigv4",
                  "originAccessControlOriginType": "s3"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.CfnOriginAccessControl",
              "version": "2.184.1"
            }
          },
          "VpcId": {
            "id": "VpcId",
            "path": "SharedInfrastructureStack/VpcId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "SharedInfrastructureStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "SharedInfrastructureStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "SharedInfrastructureStack/Exports",
            "children": {
              "Output{\"Ref\":\"SharedVpc96F0F614\"}": {
                "id": "Output{\"Ref\":\"SharedVpc96F0F614\"}",
                "path": "SharedInfrastructureStack/Exports/Output{\"Ref\":\"SharedVpc96F0F614\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SharedVpcprivateSubnet1Subnet51E913CA\"}": {
                "id": "Output{\"Ref\":\"SharedVpcprivateSubnet1Subnet51E913CA\"}",
                "path": "SharedInfrastructureStack/Exports/Output{\"Ref\":\"SharedVpcprivateSubnet1Subnet51E913CA\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SharedVpcprivateSubnet2Subnet50406F86\"}": {
                "id": "Output{\"Ref\":\"SharedVpcprivateSubnet2Subnet50406F86\"}",
                "path": "SharedInfrastructureStack/Exports/Output{\"Ref\":\"SharedVpcprivateSubnet2Subnet50406F86\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SharedVpc96F0F614\",\"CidrBlock\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SharedVpc96F0F614\",\"CidrBlock\"]}",
                "path": "SharedInfrastructureStack/Exports/Output{\"Fn::GetAtt\":[\"SharedVpc96F0F614\",\"CidrBlock\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SharedVpcpublicSubnet1Subnet8B290348\"}": {
                "id": "Output{\"Ref\":\"SharedVpcpublicSubnet1Subnet8B290348\"}",
                "path": "SharedInfrastructureStack/Exports/Output{\"Ref\":\"SharedVpcpublicSubnet1Subnet8B290348\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SharedVpcpublicSubnet2SubnetE497BB00\"}": {
                "id": "Output{\"Ref\":\"SharedVpcpublicSubnet2SubnetE497BB00\"}",
                "path": "SharedInfrastructureStack/Exports/Output{\"Ref\":\"SharedVpcpublicSubnet2SubnetE497BB00\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "SharedInfrastructureStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "SharedInfrastructureStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "LandingPageStack": {
        "id": "LandingPageStack",
        "path": "LandingPageStack",
        "children": {
          "ImportedCertificate": {
            "id": "ImportedCertificate",
            "path": "LandingPageStack/ImportedCertificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "LandingHostedZone": {
            "id": "LandingHostedZone",
            "path": "LandingPageStack/LandingHostedZone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "LandingBucket": {
            "id": "LandingBucket",
            "path": "LandingPageStack/LandingBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "LandingPageStack/LandingBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "AES256"
                          }
                        }
                      ]
                    },
                    "bucketName": "eastmedical.ai-landing",
                    "corsConfiguration": {
                      "corsRules": [
                        {
                          "maxAge": 3000,
                          "allowedHeaders": [
                            "*"
                          ],
                          "allowedMethods": [
                            "GET"
                          ],
                          "allowedOrigins": [
                            "https://eastmedical.ai",
                            "https://www.eastmedical.ai"
                          ]
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "aws-cdk:cr-owned:623323c9",
                        "value": "true"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.184.1"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "LandingPageStack/LandingBucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LandingPageStack/LandingBucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "LandingBucket23FE90FB"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "LandingBucket23FE90FB",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "LandingBucket23FE90FB",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "LandingBucket23FE90FB",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "LandingBucket23FE90FB",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "LandingDistributionV2Origin1S3Origin7E2D62C6",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "LandingBucket23FE90FB",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "s3:GetObject",
                              "Condition": {
                                "StringEquals": {
                                  "AWS:SourceArn": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:cloudfront::302263086944:distribution/",
                                        {
                                          "Ref": "LandingDistributionV255E5EFE6"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "cloudfront.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "LandingBucket23FE90FB",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "LandingPageStack/LandingBucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "LandingPageStack/LandingBucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "LandingPageStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "LandingPageStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.184.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "LandingPageStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "LandingPageStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.184.1"
            }
          },
          "CloudFrontOAC": {
            "id": "CloudFrontOAC",
            "path": "LandingPageStack/CloudFrontOAC",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CloudFront::OriginAccessControl",
              "aws:cdk:cloudformation:props": {
                "originAccessControlConfig": {
                  "name": "CloudFrontOAC",
                  "signingBehavior": "always",
                  "signingProtocol": "sigv4",
                  "originAccessControlOriginType": "s3"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.CfnOriginAccessControl",
              "version": "2.184.1"
            }
          },
          "LandingDistributionV2": {
            "id": "LandingDistributionV2",
            "path": "LandingPageStack/LandingDistributionV2",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "LandingPageStack/LandingDistributionV2/Origin1",
                "children": {
                  "S3Origin": {
                    "id": "S3Origin",
                    "path": "LandingPageStack/LandingDistributionV2/Origin1/S3Origin",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "LandingPageStack/LandingDistributionV2/Origin1/S3Origin/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                          "aws:cdk:cloudformation:props": {
                            "cloudFrontOriginAccessIdentityConfig": {
                              "comment": "Identity for LandingPageStackLandingDistributionV2Origin11EA9EBC3"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.4.2"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "LandingPageStack/LandingDistributionV2/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "LandingBucket23FE90FB",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "LandingPageStackLandingDistributionV2Origin11EA9EBC3",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "LandingDistributionV2Origin1S3Origin7E2D62C6"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "LandingPageStackLandingDistributionV2Origin11EA9EBC3",
                        "allowedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "cachedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "aliases": [
                        "eastmedical.ai",
                        "www.eastmedical.ai"
                      ],
                      "customErrorResponses": [
                        {
                          "errorCachingMinTtl": 600,
                          "errorCode": 403,
                          "responseCode": 200,
                          "responsePagePath": "/index.html"
                        },
                        {
                          "errorCachingMinTtl": 600,
                          "errorCode": 404,
                          "responseCode": 200,
                          "responsePagePath": "/index.html"
                        }
                      ],
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2and3",
                      "ipv6Enabled": true,
                      "priceClass": "PriceClass_100",
                      "viewerCertificate": {
                        "acmCertificateArn": {
                          "Fn::GetAtt": [
                            "ExportsReader8B249524",
                            "/cdk/exports/LandingPage/WhisperProcessingCertificateuseast1RefCertificate4E7ABB08B6A78DF3"
                          ]
                        },
                        "minimumProtocolVersion": "TLSv1.2_2021",
                        "sslSupportMethod": "sni-only"
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "LandingDeployment": {
            "id": "LandingDeployment",
            "path": "LandingPageStack/LandingDeployment",
            "children": {
              "AwsCliLayer": {
                "id": "AwsCliLayer",
                "path": "LandingPageStack/LandingDeployment/AwsCliLayer",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "LandingPageStack/LandingDeployment/AwsCliLayer/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "LandingPageStack/LandingDeployment/AwsCliLayer/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.184.1"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "LandingPageStack/LandingDeployment/AwsCliLayer/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.184.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "LandingPageStack/LandingDeployment/AwsCliLayer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::LayerVersion",
                      "aws:cdk:cloudformation:props": {
                        "content": {
                          "s3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
                          "s3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
                        },
                        "description": "/opt/awscli/aws"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnLayerVersion",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.lambda_layer_awscli.AwsCliLayer",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "CustomResourceHandler": {
                "id": "CustomResourceHandler",
                "path": "LandingPageStack/LandingDeployment/CustomResourceHandler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.SingletonFunction",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Asset1": {
                "id": "Asset1",
                "path": "LandingPageStack/LandingDeployment/Asset1",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "LandingPageStack/LandingDeployment/Asset1/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.184.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "LandingPageStack/LandingDeployment/Asset1/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.184.1"
                }
              },
              "CustomResource": {
                "id": "CustomResource",
                "path": "LandingPageStack/LandingDeployment/CustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "LandingPageStack/LandingDeployment/CustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3_deployment.BucketDeployment",
              "version": "2.184.1"
            }
          },
          "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C": {
            "id": "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::cdk-hnb659fds-assets-302263086944-us-east-2"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::cdk-hnb659fds-assets-302263086944-us-east-2/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "LandingBucket23FE90FB",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "LandingBucket23FE90FB",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "cloudfront:GetInvalidation",
                                    "cloudfront:CreateInvalidation"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
                            "roles": [
                              {
                                "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Code": {
                "id": "Code",
                "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.184.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.184.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "LandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
                      "s3Key": "c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762.zip"
                    },
                    "environment": {
                      "variables": {
                        "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
                      }
                    },
                    "handler": "index.handler",
                    "layers": [
                      {
                        "Ref": "LandingDeploymentAwsCliLayer63FCABB1"
                      }
                    ],
                    "role": {
                      "Fn::GetAtt": [
                        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.11",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "LandingARecord": {
            "id": "LandingARecord",
            "path": "LandingPageStack/LandingARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "LandingPageStack/LandingARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::FindInMap": [
                          "AWSCloudFrontPartitionHostedZoneIdMap",
                          {
                            "Ref": "AWS::Partition"
                          },
                          "zoneId"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "LandingDistributionV255E5EFE6",
                          "DomainName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z055778020D8NH7RP81J5",
                    "name": "eastmedical.ai.",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "AWSCloudFrontPartitionHostedZoneIdMap": {
            "id": "AWSCloudFrontPartitionHostedZoneIdMap",
            "path": "LandingPageStack/AWSCloudFrontPartitionHostedZoneIdMap",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnMapping",
              "version": "2.184.1"
            }
          },
          "LandingWWWARecord": {
            "id": "LandingWWWARecord",
            "path": "LandingPageStack/LandingWWWARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "LandingPageStack/LandingWWWARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::FindInMap": [
                          "AWSCloudFrontPartitionHostedZoneIdMap",
                          {
                            "Ref": "AWS::Partition"
                          },
                          "zoneId"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "LandingDistributionV255E5EFE6",
                          "DomainName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z055778020D8NH7RP81J5",
                    "name": "www.eastmedical.ai.",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "LandingURL": {
            "id": "LandingURL",
            "path": "LandingPageStack/LandingURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "LandingPageURL": {
            "id": "LandingPageURL",
            "path": "LandingPageStack/LandingPageURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "LandingPageStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "LandingPageStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "ExportsReader": {
            "id": "ExportsReader",
            "path": "LandingPageStack/ExportsReader",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "LandingPageStack/ExportsReader/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "LandingPageStack/ExportsReader/Resource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Custom::CrossRegionExportReaderCustomResourceProvider": {
            "id": "Custom::CrossRegionExportReaderCustomResourceProvider",
            "path": "LandingPageStack/Custom::CrossRegionExportReaderCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "LandingPageStack/Custom::CrossRegionExportReaderCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.184.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "LandingPageStack/Custom::CrossRegionExportReaderCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "LandingPageStack/Custom::CrossRegionExportReaderCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.184.1"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "LandingPageStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "LandingPageStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "WhisperProcessingStack": {
        "id": "WhisperProcessingStack",
        "path": "WhisperProcessingStack",
        "children": {
          "AudioBucket": {
            "id": "AudioBucket",
            "path": "WhisperProcessingStack/AudioBucket",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.BucketBase",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperDLQ": {
            "id": "WhisperDLQ",
            "path": "WhisperProcessingStack/WhisperDLQ",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperDLQ/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "messageRetentionPeriod": 1209600,
                    "queueName": "whisperprocessing-whisper-dlq"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperProcessingQueue": {
            "id": "WhisperProcessingQueue",
            "path": "WhisperProcessingStack/WhisperProcessingQueue",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperProcessingQueue/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "messageRetentionPeriod": 1209600,
                    "queueName": "whisperprocessing-whisper-jobs",
                    "redrivePolicy": {
                      "deadLetterTargetArn": {
                        "Fn::GetAtt": [
                          "WhisperDLQFCBB4107",
                          "Arn"
                        ]
                      },
                      "maxReceiveCount": 3
                    },
                    "visibilityTimeout": 1800
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "ApiUser": {
            "id": "ApiUser",
            "path": "WhisperProcessingStack/ApiUser",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/ApiUser/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::User",
                  "aws:cdk:cloudformation:props": {
                    "userName": "whisperprocessing-api-user"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnUser",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.User",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "ApiUserAccessKey": {
            "id": "ApiUserAccessKey",
            "path": "WhisperProcessingStack/ApiUserAccessKey",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/ApiUserAccessKey/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::AccessKey",
                  "aws:cdk:cloudformation:props": {
                    "serial": 1,
                    "userName": {
                      "Ref": "ApiUser54822C88"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnAccessKey",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.AccessKey",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperSecret": {
            "id": "WhisperSecret",
            "path": "WhisperProcessingStack/WhisperSecret",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "ApiUserPolicy": {
            "id": "ApiUserPolicy",
            "path": "WhisperProcessingStack/ApiUserPolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/ApiUserPolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "sqs:SendMessage",
                            "sqs:ReceiveMessage",
                            "sqs:DeleteMessage",
                            "sqs:GetQueueUrl",
                            "sqs:GetQueueAttributes"
                          ],
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::GetAtt": [
                              "WhisperProcessingQueue902D22B9",
                              "Arn"
                            ]
                          }
                        },
                        {
                          "Action": [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:HeadObject",
                            "s3:ListBucket",
                            "s3:PutObjectAcl"
                          ],
                          "Effect": "Allow",
                          "Resource": [
                            {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":s3:::whisperprocessing-files/*"
                                ]
                              ]
                            },
                            {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":s3:::whisperprocessing-files"
                                ]
                              ]
                            }
                          ]
                        },
                        {
                          "Action": [
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:DescribeSecret"
                          ],
                          "Effect": "Allow",
                          "Resource": [
                            "arn:aws:secretsmanager:us-east-2:302263086944:secret:whisperworker-*",
                            {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":secretsmanager:us-east-2:302263086944:secret:whisperworker"
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "ApiUserPolicy5740E403",
                    "users": [
                      {
                        "Ref": "ApiUser54822C88"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "AccessKeyId": {
            "id": "AccessKeyId",
            "path": "WhisperProcessingStack/AccessKeyId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "SecretAccessKey": {
            "id": "SecretAccessKey",
            "path": "WhisperProcessingStack/SecretAccessKey",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "BucketName": {
            "id": "BucketName",
            "path": "WhisperProcessingStack/BucketName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "ProdQueueUrl": {
            "id": "ProdQueueUrl",
            "path": "WhisperProcessingStack/ProdQueueUrl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "Region": {
            "id": "Region",
            "path": "WhisperProcessingStack/Region",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperCluster": {
            "id": "WhisperCluster",
            "path": "WhisperProcessingStack/WhisperCluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperCluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterSettings": [
                      {
                        "name": "containerInsights",
                        "value": "enabled"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.Cluster",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperServiceLogs": {
            "id": "WhisperServiceLogs",
            "path": "WhisperProcessingStack/WhisperServiceLogs",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperServiceLogs/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "retentionInDays": 7
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_logs.LogGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperEFSSecurityGroup": {
            "id": "WhisperEFSSecurityGroup",
            "path": "WhisperProcessingStack/WhisperEFSSecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperEFSSecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for Whisper EFS",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.184.1"
                }
              },
              "from WhisperProcessingStackWhisperECSSecurityGroupA753763F:2049": {
                "id": "from WhisperProcessingStackWhisperECSSecurityGroupA753763F:2049",
                "path": "WhisperProcessingStack/WhisperEFSSecurityGroup/from WhisperProcessingStackWhisperECSSecurityGroupA753763F:2049",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow NFS traffic from ECS tasks",
                    "fromPort": 2049,
                    "groupId": {
                      "Fn::GetAtt": [
                        "WhisperEFSSecurityGroupBB8C0F0D",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "WhisperECSSecurityGroupA98EC4DF",
                        "GroupId"
                      ]
                    },
                    "toPort": 2049
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperModelCache": {
            "id": "WhisperModelCache",
            "path": "WhisperProcessingStack/WhisperModelCache",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperModelCache/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::FileSystem",
                  "aws:cdk:cloudformation:props": {
                    "encrypted": true,
                    "lifecyclePolicies": [
                      {
                        "transitionToIa": "AFTER_14_DAYS"
                      }
                    ],
                    "performanceMode": "generalPurpose",
                    "fileSystemTags": [
                      {
                        "key": "Name",
                        "value": "WhisperProcessingStack/WhisperModelCache"
                      }
                    ],
                    "throughputMode": "bursting"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_efs.CfnFileSystem",
                  "version": "2.184.1"
                }
              },
              "EfsMountTarget1": {
                "id": "EfsMountTarget1",
                "path": "WhisperProcessingStack/WhisperModelCache/EfsMountTarget1",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::MountTarget",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemId": {
                      "Ref": "WhisperModelCache919B57BB"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "WhisperEFSSecurityGroupBB8C0F0D",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_efs.CfnMountTarget",
                  "version": "2.184.1"
                }
              },
              "EfsMountTarget2": {
                "id": "EfsMountTarget2",
                "path": "WhisperProcessingStack/WhisperModelCache/EfsMountTarget2",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::MountTarget",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemId": {
                      "Ref": "WhisperModelCache919B57BB"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "WhisperEFSSecurityGroupBB8C0F0D",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_efs.CfnMountTarget",
                  "version": "2.184.1"
                }
              },
              "WhisperContainerAccess": {
                "id": "WhisperContainerAccess",
                "path": "WhisperProcessingStack/WhisperModelCache/WhisperContainerAccess",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WhisperProcessingStack/WhisperModelCache/WhisperContainerAccess/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EFS::AccessPoint",
                      "aws:cdk:cloudformation:props": {
                        "fileSystemId": {
                          "Ref": "WhisperModelCache919B57BB"
                        },
                        "posixUser": {
                          "uid": "1000",
                          "gid": "1000"
                        },
                        "rootDirectory": {
                          "creationInfo": {
                            "ownerGid": "1000",
                            "ownerUid": "1000",
                            "permissions": "755"
                          },
                          "path": "/whisper-models"
                        },
                        "accessPointTags": [
                          {
                            "key": "Name",
                            "value": "WhisperProcessingStack/WhisperModelCache/WhisperContainerAccess"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_efs.CfnAccessPoint",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_efs.AccessPoint",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_efs.FileSystem",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperECSSecurityGroup": {
            "id": "WhisperECSSecurityGroup",
            "path": "WhisperProcessingStack/WhisperECSSecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperECSSecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for Whisper ECS tasks",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperTask": {
            "id": "WhisperTask",
            "path": "WhisperProcessingStack/WhisperTask",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "WhisperProcessingStack/WhisperTask/TaskRole",
                "children": {
                  "ImportTaskRole": {
                    "id": "ImportTaskRole",
                    "path": "WhisperProcessingStack/WhisperTask/TaskRole/ImportTaskRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WhisperProcessingStack/WhisperTask/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WhisperProcessingStack/WhisperTask/TaskRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WhisperProcessingStack/WhisperTask/TaskRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "elasticfilesystem:ClientMount",
                                    "elasticfilesystem:ClientWrite",
                                    "elasticfilesystem:ClientRootAccess",
                                    "elasticfilesystem:DescribeMountTargets"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "WhisperModelCache919B57BB",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject",
                                    "s3:PutObject",
                                    "s3:ListBucket",
                                    "s3:DeleteObject"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files/*"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "WhisperProcessingQueue902D22B9",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "secretsmanager:GetSecretValue",
                                    "secretsmanager:DescribeSecret"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":secretsmanager:us-east-2:302263086944:secret:whisperworker-??????"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "WhisperTaskTaskRoleDefaultPolicyBF3F88A7",
                            "roles": [
                              {
                                "Ref": "WhisperTaskTaskRoleBF6B9E32"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperTask/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Sub": "302263086944.dkr.ecr.us-east-2.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-302263086944-us-east-2:806712f32eccce919eb5b2129b888a14c40561691f6606e64ac3656a334c548e"
                        },
                        "mountPoints": [
                          {
                            "containerPath": "/mnt/models",
                            "readOnly": false,
                            "sourceVolume": "model-cache"
                          }
                        ],
                        "name": "WhisperContainer",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "WhisperServiceLogs54B5DC49"
                            },
                            "awslogs-stream-prefix": "whisper",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "WHISPER_QUEUE_URL",
                            "value": {
                              "Ref": "WhisperProcessingQueue902D22B9"
                            }
                          },
                          {
                            "name": "S3_BUCKET_NAME",
                            "value": "whisperprocessing-files"
                          },
                          {
                            "name": "AWS_REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "ENVIRONMENT",
                            "value": "production"
                          },
                          {
                            "name": "MODEL_CACHE_DIR",
                            "value": "/mnt/models"
                          },
                          {
                            "name": "AWS_EC2_METADATA_DISABLED",
                            "value": "true"
                          },
                          {
                            "name": "AWS_USE_FIPS_ENDPOINT",
                            "value": "false"
                          },
                          {
                            "name": "AWS_STS_REGIONAL_ENDPOINTS",
                            "value": "regional"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "OPENAI_API_KEY",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":secretsmanager:us-east-2:302263086944:secret:whisperworker:OPENAI_API_KEY::"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "API_TOKEN",
                            "valueFrom": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":secretsmanager:us-east-2:302263086944:secret:whisperworker:API_TOKEN::"
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "cpu": "1024",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "WhisperTaskExecutionRoleED9FB9FB",
                        "Arn"
                      ]
                    },
                    "family": "WhisperProcessingStackWhisperTask78383C88",
                    "memory": "2048",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "WhisperTaskTaskRoleBF6B9E32",
                        "Arn"
                      ]
                    },
                    "volumes": [
                      {
                        "name": "model-cache",
                        "efsVolumeConfiguration": {
                          "filesystemId": {
                            "Ref": "WhisperModelCache919B57BB"
                          },
                          "authorizationConfig": {
                            "accessPointId": {
                              "Ref": "WhisperModelCacheWhisperContainerAccess86365E9F"
                            },
                            "iam": "ENABLED"
                          },
                          "rootDirectory": "/",
                          "transitEncryption": "ENABLED"
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "ExecutionRole": {
                "id": "ExecutionRole",
                "path": "WhisperProcessingStack/WhisperTask/ExecutionRole",
                "children": {
                  "ImportExecutionRole": {
                    "id": "ImportExecutionRole",
                    "path": "WhisperProcessingStack/WhisperTask/ExecutionRole/ImportExecutionRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WhisperProcessingStack/WhisperTask/ExecutionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WhisperProcessingStack/WhisperTask/ExecutionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WhisperProcessingStack/WhisperTask/ExecutionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "elasticfilesystem:ClientMount",
                                    "elasticfilesystem:ClientWrite"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "WhisperModelCache919B57BB",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject",
                                    "s3:ListBucket"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files/*"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:us-east-2:302263086944:repository/cdk-hnb659fds-container-assets-302263086944-us-east-2"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "ecr:GetAuthorizationToken",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "WhisperServiceLogs54B5DC49",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "secretsmanager:GetSecretValue",
                                    "secretsmanager:DescribeSecret"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":secretsmanager:us-east-2:302263086944:secret:whisperworker-??????"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "WhisperTaskExecutionRoleDefaultPolicyC86611D3",
                            "roles": [
                              {
                                "Ref": "WhisperTaskExecutionRoleED9FB9FB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "WhisperContainer": {
                "id": "WhisperContainer",
                "path": "WhisperProcessingStack/WhisperTask/WhisperContainer",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "WhisperProcessingStack/WhisperTask/WhisperContainer/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "WhisperProcessingStack/WhisperTask/WhisperContainer/AssetImage/Staging",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.184.1"
                        }
                      },
                      "Repository": {
                        "id": "Repository",
                        "path": "WhisperProcessingStack/WhisperTask/WhisperContainer/AssetImage/Repository",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ecr.RepositoryBase",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecr_assets.DockerImageAsset",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperService": {
            "id": "WhisperService",
            "path": "WhisperProcessingStack/WhisperService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "WhisperProcessingStack/WhisperService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "WhisperCluster3B62D340"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 0,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "launchType": "FARGATE",
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "WhisperECSSecurityGroupA98EC4DF",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "platformVersion": "1.4.0",
                    "taskDefinition": {
                      "Ref": "WhisperTask7067F0D5"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "WhisperProcessingStack/WhisperService/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "WhisperProcessingStack/WhisperService/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "WhisperProcessingStack/WhisperService/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 5,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "WhisperCluster3B62D340"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "WhisperServiceB10F19EC",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::302263086944:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_applicationautoscaling.CfnScalableTarget",
                          "version": "2.184.1"
                        }
                      },
                      "QueueMessagesVisible": {
                        "id": "QueueMessagesVisible",
                        "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible",
                        "children": {
                          "LowerPolicy": {
                            "id": "LowerPolicy",
                            "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/LowerPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/LowerPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyName": "WhisperProcessingStackWhisperServiceTaskCountTargetQueueMessagesVisibleLowerPolicyFCE8FA67",
                                    "policyType": "StepScaling",
                                    "scalingTargetId": {
                                      "Ref": "WhisperServiceTaskCountTargetA01DBDF3"
                                    },
                                    "stepScalingPolicyConfiguration": {
                                      "adjustmentType": "ChangeInCapacity",
                                      "cooldown": 300,
                                      "stepAdjustments": [
                                        {
                                          "metricIntervalUpperBound": 0,
                                          "scalingAdjustment": -1
                                        }
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_applicationautoscaling.CfnScalingPolicy",
                                  "version": "2.184.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_applicationautoscaling.StepScalingAction",
                              "version": "2.184.1"
                            }
                          },
                          "LowerAlarm": {
                            "id": "LowerAlarm",
                            "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/LowerAlarm",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/LowerAlarm/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                                  "aws:cdk:cloudformation:props": {
                                    "alarmActions": [
                                      {
                                        "Ref": "WhisperServiceTaskCountTargetQueueMessagesVisibleLowerPolicy47F2F070"
                                      }
                                    ],
                                    "alarmDescription": "Lower threshold scaling alarm",
                                    "comparisonOperator": "LessThanOrEqualToThreshold",
                                    "evaluationPeriods": 1,
                                    "metrics": [
                                      {
                                        "expression": "prod",
                                        "id": "expr_1"
                                      },
                                      {
                                        "metricStat": {
                                          "metric": {
                                            "metricName": "ApproximateNumberOfMessagesVisible",
                                            "namespace": "AWS/SQS",
                                            "dimensions": [
                                              {
                                                "name": "QueueName",
                                                "value": {
                                                  "Fn::GetAtt": [
                                                    "WhisperProcessingQueue902D22B9",
                                                    "QueueName"
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "period": 300,
                                          "stat": "Maximum"
                                        },
                                        "id": "prod",
                                        "returnData": false
                                      }
                                    ],
                                    "threshold": 5
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_cloudwatch.CfnAlarm",
                                  "version": "2.184.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_cloudwatch.Alarm",
                              "version": "2.184.1",
                              "metadata": []
                            }
                          },
                          "UpperPolicy": {
                            "id": "UpperPolicy",
                            "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/UpperPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/UpperPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyName": "WhisperProcessingStackWhisperServiceTaskCountTargetQueueMessagesVisibleUpperPolicyBCD23780",
                                    "policyType": "StepScaling",
                                    "scalingTargetId": {
                                      "Ref": "WhisperServiceTaskCountTargetA01DBDF3"
                                    },
                                    "stepScalingPolicyConfiguration": {
                                      "adjustmentType": "ChangeInCapacity",
                                      "cooldown": 300,
                                      "stepAdjustments": [
                                        {
                                          "metricIntervalLowerBound": 0,
                                          "metricIntervalUpperBound": 10,
                                          "scalingAdjustment": 1
                                        },
                                        {
                                          "metricIntervalLowerBound": 10,
                                          "metricIntervalUpperBound": 40,
                                          "scalingAdjustment": 2
                                        },
                                        {
                                          "metricIntervalLowerBound": 40,
                                          "scalingAdjustment": 3
                                        }
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_applicationautoscaling.CfnScalingPolicy",
                                  "version": "2.184.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_applicationautoscaling.StepScalingAction",
                              "version": "2.184.1"
                            }
                          },
                          "UpperAlarm": {
                            "id": "UpperAlarm",
                            "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/UpperAlarm",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WhisperProcessingStack/WhisperService/TaskCount/Target/QueueMessagesVisible/UpperAlarm/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                                  "aws:cdk:cloudformation:props": {
                                    "alarmActions": [
                                      {
                                        "Ref": "WhisperServiceTaskCountTargetQueueMessagesVisibleUpperPolicyA50E5334"
                                      }
                                    ],
                                    "alarmDescription": "Upper threshold scaling alarm",
                                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                                    "evaluationPeriods": 1,
                                    "metrics": [
                                      {
                                        "expression": "prod",
                                        "id": "expr_1"
                                      },
                                      {
                                        "metricStat": {
                                          "metric": {
                                            "metricName": "ApproximateNumberOfMessagesVisible",
                                            "namespace": "AWS/SQS",
                                            "dimensions": [
                                              {
                                                "name": "QueueName",
                                                "value": {
                                                  "Fn::GetAtt": [
                                                    "WhisperProcessingQueue902D22B9",
                                                    "QueueName"
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "period": 300,
                                          "stat": "Maximum"
                                        },
                                        "id": "prod",
                                        "returnData": false
                                      }
                                    ],
                                    "threshold": 10
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_cloudwatch.CfnAlarm",
                                  "version": "2.184.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_cloudwatch.Alarm",
                              "version": "2.184.1",
                              "metadata": []
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_applicationautoscaling.StepScalingPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_applicationautoscaling.ScalableTarget",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ScalableTaskCount",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WhisperDashboard": {
            "id": "WhisperDashboard",
            "path": "WhisperProcessingStack/WhisperDashboard",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WhisperProcessingStack/WhisperDashboard/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Dashboard",
                  "aws:cdk:cloudformation:props": {
                    "dashboardBody": {
                      "Fn::Join": [
                        "",
                        [
                          "{\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SQS Queue Metrics\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/SQS\",\"ApproximateNumberOfMessagesVisible\",\"QueueName\",\"",
                          {
                            "Fn::GetAtt": [
                              "WhisperProcessingQueue902D22B9",
                              "QueueName"
                            ]
                          },
                          "\",{\"stat\":\"Maximum\"}],[\"AWS/SQS\",\"ApproximateNumberOfMessagesNotVisible\",\"QueueName\",\"",
                          {
                            "Fn::GetAtt": [
                              "WhisperProcessingQueue902D22B9",
                              "QueueName"
                            ]
                          },
                          "\",{\"stat\":\"Maximum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"ECS Service Metrics\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "WhisperCluster3B62D340"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "WhisperServiceB10F19EC",
                              "Name"
                            ]
                          },
                          "\"],[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "WhisperCluster3B62D340"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "WhisperServiceB10F19EC",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}}]}"
                        ]
                      ]
                    },
                    "dashboardName": "whisperprocessing-metrics"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudwatch.CfnDashboard",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Dashboard",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "EcsClusterName": {
            "id": "EcsClusterName",
            "path": "WhisperProcessingStack/EcsClusterName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "LogGroupName": {
            "id": "LogGroupName",
            "path": "WhisperProcessingStack/LogGroupName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperStackName": {
            "id": "WhisperStackName",
            "path": "WhisperProcessingStack/WhisperStackName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperaudioBucket": {
            "id": "WhisperaudioBucket",
            "path": "WhisperProcessingStack/WhisperaudioBucket",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperwhisperQueue": {
            "id": "WhisperwhisperQueue",
            "path": "WhisperProcessingStack/WhisperwhisperQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperapiUser": {
            "id": "WhisperapiUser",
            "path": "WhisperProcessingStack/WhisperapiUser",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "Whisperservice": {
            "id": "Whisperservice",
            "path": "WhisperProcessingStack/Whisperservice",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "Whispercluster": {
            "id": "Whispercluster",
            "path": "WhisperProcessingStack/Whispercluster",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperlogGroup": {
            "id": "WhisperlogGroup",
            "path": "WhisperProcessingStack/WhisperlogGroup",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "WhisperwhisperSecret": {
            "id": "WhisperwhisperSecret",
            "path": "WhisperProcessingStack/WhisperwhisperSecret",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "Whispervpc": {
            "id": "Whispervpc",
            "path": "WhisperProcessingStack/Whispervpc",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WhisperProcessingStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WhisperProcessingStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WhisperProcessingStack/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"WhisperProcessingQueue902D22B9\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"WhisperProcessingQueue902D22B9\",\"Arn\"]}",
                "path": "WhisperProcessingStack/Exports/Output{\"Fn::GetAtt\":[\"WhisperProcessingQueue902D22B9\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"WhisperProcessingQueue902D22B9\"}": {
                "id": "Output{\"Ref\":\"WhisperProcessingQueue902D22B9\"}",
                "path": "WhisperProcessingStack/Exports/Output{\"Ref\":\"WhisperProcessingQueue902D22B9\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WhisperProcessingStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WhisperProcessingStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "SupabaseDbStack": {
        "id": "SupabaseDbStack",
        "path": "SupabaseDbStack",
        "children": {
          "SupabaseDbSG": {
            "id": "SupabaseDbSG",
            "path": "SupabaseDbStack/SupabaseDbSG",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabaseDbSG/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for Supabase database",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": {
                          "Fn::ImportValue": "SharedInfrastructure:ExportsOutputFnGetAttSharedVpc96F0F614CidrBlock4B6DE39C"
                        },
                        "ipProtocol": "tcp",
                        "fromPort": 5432,
                        "toPort": 5432,
                        "description": "Allow PostgreSQL access from within VPC"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseDbPassword": {
            "id": "SupabaseDbPassword",
            "path": "SupabaseDbStack/SupabaseDbPassword",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabaseDbPassword/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "description": "Password for Supabase PostgreSQL database",
                    "generateSecretString": {
                      "excludePunctuation": true,
                      "includeSpace": false,
                      "passwordLength": 16
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_secretsmanager.Secret",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseJwtSecret": {
            "id": "SupabaseJwtSecret",
            "path": "SupabaseDbStack/SupabaseJwtSecret",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabaseJwtSecret/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "description": "JWT secret for Supabase auth",
                    "generateSecretString": {
                      "excludePunctuation": true,
                      "includeSpace": false,
                      "passwordLength": 40
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_secretsmanager.Secret",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseAnnonKey": {
            "id": "SupabaseAnnonKey",
            "path": "SupabaseDbStack/SupabaseAnnonKey",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabaseAnnonKey/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "description": "Anon key for Supabase",
                    "generateSecretString": {
                      "excludePunctuation": true,
                      "includeSpace": false,
                      "passwordLength": 40
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_secretsmanager.Secret",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseServiceRoleKey": {
            "id": "SupabaseServiceRoleKey",
            "path": "SupabaseDbStack/SupabaseServiceRoleKey",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabaseServiceRoleKey/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "description": "Service role key for Supabase",
                    "generateSecretString": {
                      "excludePunctuation": true,
                      "includeSpace": false,
                      "passwordLength": 40
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_secretsmanager.Secret",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseParameterGroup": {
            "id": "SupabaseParameterGroup",
            "path": "SupabaseDbStack/SupabaseParameterGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabaseParameterGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBParameterGroup",
                  "aws:cdk:cloudformation:props": {
                    "description": "Parameter group for Supabase RDS instance",
                    "family": "postgres15",
                    "parameters": {
                      "rds.force_ssl": "0",
                      "password_encryption": "md5"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBParameterGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.ParameterGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabasePostgres": {
            "id": "SupabasePostgres",
            "path": "SupabaseDbStack/SupabasePostgres",
            "children": {
              "SubnetGroup": {
                "id": "SubnetGroup",
                "path": "SupabaseDbStack/SupabasePostgres/SubnetGroup",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "SupabaseDbStack/SupabasePostgres/SubnetGroup/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnet group for SupabasePostgres database",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SupabaseDbStack/SupabasePostgres/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "allocatedStorage": "20",
                    "autoMinorVersionUpgrade": true,
                    "backupRetentionPeriod": 7,
                    "copyTagsToSnapshot": true,
                    "dbInstanceClass": "db.t4g.small",
                    "dbName": "postgres",
                    "dbParameterGroupName": {
                      "Ref": "SupabaseParameterGroup0BF22D33"
                    },
                    "dbSubnetGroupName": {
                      "Ref": "SupabasePostgresSubnetGroupF9DCE382"
                    },
                    "deletionProtection": false,
                    "engine": "postgres",
                    "engineVersion": "15",
                    "masterUsername": "postgres",
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "SupabaseDbPassword4F5D848D"
                          },
                          ":SecretString:::}}"
                        ]
                      ]
                    },
                    "maxAllocatedStorage": 100,
                    "multiAz": false,
                    "publiclyAccessible": false,
                    "storageType": "gp3",
                    "vpcSecurityGroups": [
                      {
                        "Fn::GetAtt": [
                          "SupabaseDbSGF87AE160",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBInstance",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseInstance",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "PostgresEndpoint": {
            "id": "PostgresEndpoint",
            "path": "SupabaseDbStack/PostgresEndpoint",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "SupabaseDbPasswordSecretArn": {
            "id": "SupabaseDbPasswordSecretArn",
            "path": "SupabaseDbStack/SupabaseDbPasswordSecretArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "SupabaseJwtSecretArn": {
            "id": "SupabaseJwtSecretArn",
            "path": "SupabaseDbStack/SupabaseJwtSecretArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "SupabaseAnnonKeySecretArn": {
            "id": "SupabaseAnnonKeySecretArn",
            "path": "SupabaseDbStack/SupabaseAnnonKeySecretArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "SupabaseServiceRoleKeySecretArn": {
            "id": "SupabaseServiceRoleKeySecretArn",
            "path": "SupabaseDbStack/SupabaseServiceRoleKeySecretArn",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "SupabaseDbStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "SupabaseDbStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "SupabaseDbStack/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SupabaseDbSGF87AE160\",\"GroupId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SupabaseDbSGF87AE160\",\"GroupId\"]}",
                "path": "SupabaseDbStack/Exports/Output{\"Fn::GetAtt\":[\"SupabaseDbSGF87AE160\",\"GroupId\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SupabaseDbPassword4F5D848D\"}": {
                "id": "Output{\"Ref\":\"SupabaseDbPassword4F5D848D\"}",
                "path": "SupabaseDbStack/Exports/Output{\"Ref\":\"SupabaseDbPassword4F5D848D\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SupabaseJwtSecret4CEDF760\"}": {
                "id": "Output{\"Ref\":\"SupabaseJwtSecret4CEDF760\"}",
                "path": "SupabaseDbStack/Exports/Output{\"Ref\":\"SupabaseJwtSecret4CEDF760\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SupabaseAnnonKey241C2469\"}": {
                "id": "Output{\"Ref\":\"SupabaseAnnonKey241C2469\"}",
                "path": "SupabaseDbStack/Exports/Output{\"Ref\":\"SupabaseAnnonKey241C2469\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SupabaseServiceRoleKey8194163D\"}": {
                "id": "Output{\"Ref\":\"SupabaseServiceRoleKey8194163D\"}",
                "path": "SupabaseDbStack/Exports/Output{\"Ref\":\"SupabaseServiceRoleKey8194163D\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SupabasePostgres0313787B\",\"Endpoint.Address\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SupabasePostgres0313787B\",\"Endpoint.Address\"]}",
                "path": "SupabaseDbStack/Exports/Output{\"Fn::GetAtt\":[\"SupabasePostgres0313787B\",\"Endpoint.Address\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "Output{\"Ref\":\"SupabasePostgres0313787B\"}": {
                "id": "Output{\"Ref\":\"SupabasePostgres0313787B\"}",
                "path": "SupabaseDbStack/Exports/Output{\"Ref\":\"SupabasePostgres0313787B\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "SupabaseDbStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "SupabaseDbStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "SupabaseServicesStack": {
        "id": "SupabaseServicesStack",
        "path": "SupabaseServicesStack",
        "children": {
          "SupabaseHostedZone": {
            "id": "SupabaseHostedZone",
            "path": "SupabaseServicesStack/SupabaseHostedZone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseCertificate": {
            "id": "SupabaseCertificate",
            "path": "SupabaseServicesStack/SupabaseCertificate",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseCertificate/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CertificateManager::Certificate",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "supabase.eastmedical.ai",
                    "domainValidationOptions": [
                      {
                        "domainName": "supabase.eastmedical.ai",
                        "hostedZoneId": "Z055778020D8NH7RP81J5"
                      }
                    ],
                    "tags": [
                      {
                        "key": "Name",
                        "value": "SupabaseServicesStack/SupabaseCertificate"
                      }
                    ],
                    "validationMethod": "DNS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_certificatemanager.CfnCertificate",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_certificatemanager.Certificate",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseServiceSG": {
            "id": "SupabaseServiceSG",
            "path": "SupabaseServicesStack/SupabaseServiceSG",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseServiceSG/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for Supabase ECS services",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:ALL PORTS": {
                "id": "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:ALL PORTS",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseServiceSGC43B9CF1:ALL PORTS",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow internal communication between Supabase services",
                    "fromPort": 0,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "toPort": 65535
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseLbSGC4F683FB:80": {
                "id": "from SupabaseServicesStackSupabaseLbSGC4F683FB:80",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseLbSGC4F683FB:80",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow load balancer to connect to services",
                    "fromPort": 80,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseLbSG67458248",
                        "GroupId"
                      ]
                    },
                    "toPort": 80
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseLbSGC4F683FB:8001": {
                "id": "from SupabaseServicesStackSupabaseLbSGC4F683FB:8001",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseLbSGC4F683FB:8001",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow load balancer to connect to Kong admin API for health checks",
                    "fromPort": 8001,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseLbSG67458248",
                        "GroupId"
                      ]
                    },
                    "toPort": 8001
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:6432": {
                "id": "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:6432",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseServiceSGC43B9CF1:6432",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow explicit access to PgBouncer",
                    "fromPort": 6432,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "toPort": 6432
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:5432": {
                "id": "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:5432",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseServiceSGC43B9CF1:5432",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow access to main Postgres port",
                    "fromPort": 5432,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "toPort": 5432
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:6543": {
                "id": "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:6543",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseServiceSGC43B9CF1:6543",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow access to transaction pooling port",
                    "fromPort": 6543,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "toPort": 6543
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              },
              "from SupabaseServicesStackSupabaseLbSGC4F683FB:8000": {
                "id": "from SupabaseServicesStackSupabaseLbSGC4F683FB:8000",
                "path": "SupabaseServicesStack/SupabaseServiceSG/from SupabaseServicesStackSupabaseLbSGC4F683FB:8000",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Load balancer to target",
                    "fromPort": 8000,
                    "groupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseLbSG67458248",
                        "GroupId"
                      ]
                    },
                    "toPort": 8000
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseLbSG": {
            "id": "SupabaseLbSG",
            "path": "SupabaseServicesStack/SupabaseLbSG",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseLbSG/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for Supabase load balancer",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 443,
                        "toPort": 443,
                        "description": "Allow from anyone on port 443"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 80,
                        "toPort": 80,
                        "description": "Allow from anyone on port 80"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "ImportedDbSecurityGroup": {
            "id": "ImportedDbSecurityGroup",
            "path": "SupabaseServicesStack/ImportedDbSecurityGroup",
            "children": {
              "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:5432": {
                "id": "from SupabaseServicesStackSupabaseServiceSGC43B9CF1:5432",
                "path": "SupabaseServicesStack/ImportedDbSecurityGroup/from SupabaseServicesStackSupabaseServiceSGC43B9CF1:5432",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "description": "Allow Supabase services to connect to PostgreSQL",
                    "fromPort": 5432,
                    "groupId": {
                      "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabaseDbSGF87AE160GroupIdA7BB6970"
                    },
                    "ipProtocol": "tcp",
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "SupabaseServiceSGF39DA778",
                        "GroupId"
                      ]
                    },
                    "toPort": 5432
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseCluster": {
            "id": "SupabaseCluster",
            "path": "SupabaseServicesStack/SupabaseCluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseCluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterSettings": [
                      {
                        "name": "containerInsights",
                        "value": "enabled"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                  "version": "2.184.1"
                }
              },
              "DefaultServiceDiscoveryNamespace": {
                "id": "DefaultServiceDiscoveryNamespace",
                "path": "SupabaseServicesStack/SupabaseCluster/DefaultServiceDiscoveryNamespace",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseCluster/DefaultServiceDiscoveryNamespace/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
                      "aws:cdk:cloudformation:props": {
                        "name": "supabase.local",
                        "vpc": {
                          "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnPrivateDnsNamespace",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.Cluster",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseTaskExecutionRole": {
            "id": "SupabaseTaskExecutionRole",
            "path": "SupabaseServicesStack/SupabaseTaskExecutionRole",
            "children": {
              "ImportSupabaseTaskExecutionRole": {
                "id": "ImportSupabaseTaskExecutionRole",
                "path": "SupabaseServicesStack/SupabaseTaskExecutionRole/ImportSupabaseTaskExecutionRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseTaskExecutionRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.184.1"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "SupabaseServicesStack/SupabaseTaskExecutionRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseTaskExecutionRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                              }
                            },
                            {
                              "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                              }
                            },
                            {
                              "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                              }
                            },
                            {
                              "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabasePoolerTaskDefSupabasePoolerLogGroup64515FB5",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabaseKongTaskDefSupabaseKongLogGroup7340D297",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabaseGotrueTaskDefSupabaseGotrueLogGroup40A13AAA",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabasePostgrestTaskDefSupabasePostgrestLogGroup80BDB325",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabaseRealtimeTaskDefSupabaseRealtimeLogGroup07E7B687",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabaseMetaTaskDefSupabaseMetaLogGroup973B9A17",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SupabaseStudioTaskDefSupabaseStudioLogGroup5DDDC40B",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "SupabaseTaskExecutionRoleDefaultPolicyC0F00D50",
                        "roles": [
                          {
                            "Ref": "SupabaseTaskExecutionRole0E31FB5D"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseTaskRole": {
            "id": "SupabaseTaskRole",
            "path": "SupabaseServicesStack/SupabaseTaskRole",
            "children": {
              "ImportSupabaseTaskRole": {
                "id": "ImportSupabaseTaskRole",
                "path": "SupabaseServicesStack/SupabaseTaskRole/ImportSupabaseTaskRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseTaskRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseALB": {
            "id": "SupabaseALB",
            "path": "SupabaseServicesStack/SupabaseALB",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseALB/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "loadBalancerAttributes": [
                      {
                        "key": "deletion_protection.enabled",
                        "value": "false"
                      }
                    ],
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "SupabaseLbSG67458248",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": [
                      {
                        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcpublicSubnet1Subnet8B290348F6FC1372"
                      },
                      {
                        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcpublicSubnet2SubnetE497BB00B8DAA4FE"
                      }
                    ],
                    "type": "application"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnLoadBalancer",
                  "version": "2.184.1"
                }
              },
              "SupabaseHttpsListener": {
                "id": "SupabaseHttpsListener",
                "path": "SupabaseServicesStack/SupabaseALB/SupabaseHttpsListener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseALB/SupabaseHttpsListener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "certificates": [
                          {
                            "certificateArn": {
                              "Ref": "SupabaseCertificate2E339463"
                            }
                          }
                        ],
                        "defaultActions": [
                          {
                            "type": "fixed-response",
                            "fixedResponseConfig": {
                              "statusCode": "404",
                              "contentType": "text/plain",
                              "messageBody": "Not Found"
                            }
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "SupabaseALB4990A1B5"
                        },
                        "port": 443,
                        "protocol": "HTTPS"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener",
                      "version": "2.184.1"
                    }
                  },
                  "SupabaseKongTargetRule": {
                    "id": "SupabaseKongTargetRule",
                    "path": "SupabaseServicesStack/SupabaseALB/SupabaseHttpsListener/SupabaseKongTargetRule",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabaseALB/SupabaseHttpsListener/SupabaseKongTargetRule/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::ListenerRule",
                          "aws:cdk:cloudformation:props": {
                            "actions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "SupabaseKongTargetGroup392AE762"
                                }
                              }
                            ],
                            "conditions": [
                              {
                                "field": "host-header",
                                "hostHeaderConfig": {
                                  "values": [
                                    "supabase.eastmedical.ai"
                                  ]
                                }
                              }
                            ],
                            "listenerArn": {
                              "Ref": "SupabaseALBSupabaseHttpsListenerD7C3A153"
                            },
                            "priority": 10
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListenerRule",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListenerRule",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "SupabaseHttpListener": {
                "id": "SupabaseHttpListener",
                "path": "SupabaseServicesStack/SupabaseALB/SupabaseHttpListener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseALB/SupabaseHttpListener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "type": "redirect",
                            "redirectConfig": {
                              "statusCode": "HTTP_301",
                              "port": "443",
                              "protocol": "HTTPS"
                            }
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "SupabaseALB4990A1B5"
                        },
                        "port": 80,
                        "protocol": "HTTP"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabasePoolerTaskDef": {
            "id": "SupabasePoolerTaskDef",
            "path": "SupabaseServicesStack/SupabasePoolerTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabasePoolerTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/supabase/supavisor:2.4.14",
                        "name": "SupabasePooler",
                        "portMappings": [
                          {
                            "containerPort": 5432,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 6543,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 4000,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabasePoolerTaskDefSupabasePoolerLogGroup64515FB5"
                            },
                            "awslogs-stream-prefix": "supabase-pooler",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "local"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai"
                          },
                          {
                            "name": "PORT",
                            "value": "4000"
                          },
                          {
                            "name": "POSTGRES_PORT",
                            "value": "5432"
                          },
                          {
                            "name": "CLUSTER_POSTGRES",
                            "value": "true"
                          },
                          {
                            "name": "ERL_AFLAGS",
                            "value": "-proto_dist inet_tcp"
                          },
                          {
                            "name": "POOLER_TENANT_ID",
                            "value": "default"
                          },
                          {
                            "name": "POOLER_DEFAULT_POOL_SIZE",
                            "value": "15"
                          },
                          {
                            "name": "POOLER_MAX_CLIENT_CONN",
                            "value": "600"
                          },
                          {
                            "name": "POOLER_POOL_MODE",
                            "value": "transaction"
                          },
                          {
                            "name": "DATABASE_URL",
                            "value": {
                              "Fn::Join": [
                                "",
                                [
                                  "ecto://supabase_admin:SupabaseDbStack/SupabaseDbPassword@",
                                  {
                                    "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                                  },
                                  ":5432/_supabase"
                                ]
                              ]
                            }
                          },
                          {
                            "name": "ERL_MAX_PORTS",
                            "value": "1048576"
                          },
                          {
                            "name": "EVENTS_QUEUE_SIZE",
                            "value": "100000"
                          },
                          {
                            "name": "EVENTS_QUEUE_POLL_INTERVAL",
                            "value": "100"
                          },
                          {
                            "name": "EVENTS_QUEUE_POLL_TIMEOUT",
                            "value": "100"
                          },
                          {
                            "name": "SUBSCRIPTION_SYNC_INTERVAL",
                            "value": "60000"
                          },
                          {
                            "name": "ENABLE_TELEMETRY",
                            "value": "false"
                          },
                          {
                            "name": "ENABLE_DASHBOARD",
                            "value": "true"
                          },
                          {
                            "name": "DASHBOARD_PORT",
                            "value": "4000"
                          },
                          {
                            "name": "METRICS_BEARER_TOKEN",
                            "value": "OVERRIDE_ME"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "API_JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "SECRET_KEY_BASE",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "VAULT_ENC_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "METRICS_JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -sSfL --head -o /dev/null http://127.0.0.1:4000/api/health || exit 1"
                          ],
                          "interval": 10,
                          "retries": 5,
                          "startPeriod": 120,
                          "timeout": 5
                        },
                        "linuxParameters": {
                          "initProcessEnabled": true,
                          "capabilities": {}
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabasePoolerTaskDefF16A3973",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabasePooler": {
                "id": "SupabasePooler",
                "path": "SupabaseServicesStack/SupabasePoolerTaskDef/SupabasePooler",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabasePoolerTaskDef/SupabasePooler/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabasePoolerTaskDef/SupabasePooler/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "PoolerLinuxParams": {
            "id": "PoolerLinuxParams",
            "path": "SupabaseServicesStack/PoolerLinuxParams",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.LinuxParameters",
              "version": "2.184.1"
            }
          },
          "SupabasePoolerService": {
            "id": "SupabasePoolerService",
            "path": "SupabaseServicesStack/SupabasePoolerService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabasePoolerService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 300,
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "platformVersion": "LATEST",
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabasePoolerServiceCloudmapService953A502F",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabasePoolerTaskDefE67358D3"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabasePoolerService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabasePoolerService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "pooler",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseKongTaskDef": {
            "id": "SupabaseKongTaskDef",
            "path": "SupabaseServicesStack/SupabaseKongTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseKongTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/supabase/kong:2.8.1",
                        "name": "SupabaseKong",
                        "portMappings": [
                          {
                            "containerPort": 8000,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 8443,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 8001,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 8444,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabaseKongTaskDefSupabaseKongLogGroup7340D297"
                            },
                            "awslogs-stream-prefix": "supabase-kong",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai"
                          },
                          {
                            "name": "KONG_DATABASE",
                            "value": "off"
                          },
                          {
                            "name": "KONG_DNS_ORDER",
                            "value": "LAST,A,CNAME"
                          },
                          {
                            "name": "KONG_PLUGINS",
                            "value": "request-transformer,cors,key-auth,acl,basic-auth"
                          },
                          {
                            "name": "KONG_DNS_RESOLVER",
                            "value": "169.254.169.253"
                          },
                          {
                            "name": "KONG_PROXY_LISTEN",
                            "value": "0.0.0.0:8000"
                          },
                          {
                            "name": "KONG_ADMIN_LISTEN",
                            "value": "0.0.0.0:8001"
                          },
                          {
                            "name": "KONG_PROXY_LISTEN_SSL",
                            "value": "0.0.0.0:8443"
                          },
                          {
                            "name": "KONG_ADMIN_LISTEN_SSL",
                            "value": "0.0.0.0:8444"
                          },
                          {
                            "name": "KONG_NGINX_PROXY_PROXY_BUFFER_SIZE",
                            "value": "160k"
                          },
                          {
                            "name": "KONG_NGINX_PROXY_PROXY_BUFFERS",
                            "value": "64 160k"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          },
                          {
                            "name": "KONG_DECLARATIVE_CONFIG_STRING",
                            "value": "{\"_format_version\":\"2.1\",\"_transform\":true,\"services\":[{\"name\":\"health\",\"url\":\"http://127.0.0.1:8001\",\"routes\":[{\"name\":\"health-route\",\"strip_path\":true,\"paths\":[\"/status\",\"/health\"],\"methods\":[\"GET\"]}]},{\"name\":\"auth-v1\",\"url\":\"http://auth.supabase.local:9999/verify\",\"routes\":[{\"name\":\"auth-v1-route\",\"strip_path\":true,\"paths\":[\"/auth/v1/verify\"]}]},{\"name\":\"rest-v1\",\"url\":\"http://rest.supabase.local:3000\",\"routes\":[{\"name\":\"rest-v1-route\",\"strip_path\":true,\"paths\":[\"/rest/v1\"]}]},{\"name\":\"realtime-v1\",\"url\":\"http://realtime.supabase.local:4000/socket\",\"routes\":[{\"name\":\"realtime-v1-route\",\"strip_path\":true,\"paths\":[\"/realtime/v1\"]}]},{\"name\":\"meta-v1\",\"url\":\"http://meta.supabase.local:8080\",\"routes\":[{\"name\":\"meta-v1-route\",\"strip_path\":true,\"paths\":[\"/meta/v1\"]}]}],\"plugins\":[{\"name\":\"cors\",\"config\":{\"origins\":[\"*\"],\"methods\":[\"GET\",\"POST\",\"PUT\",\"PATCH\",\"DELETE\",\"OPTIONS\"],\"headers\":[\"Accept\",\"Accept-Version\",\"Content-Length\",\"Content-MD5\",\"Content-Type\",\"Date\",\"Authorization\"],\"exposed_headers\":[\"Content-Length\",\"Content-Range\"],\"credentials\":true,\"max_age\":3600}}],\"routes\":[]}"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "SERVICE_ROLE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -f -s -S http://localhost:8001/health || exit 1"
                          ],
                          "interval": 10,
                          "retries": 5,
                          "startPeriod": 60,
                          "timeout": 5
                        }
                      }
                    ],
                    "cpu": "512",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabaseKongTaskDefF96C99AA",
                    "memory": "1024",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabaseKong": {
                "id": "SupabaseKong",
                "path": "SupabaseServicesStack/SupabaseKongTaskDef/SupabaseKong",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabaseKongTaskDef/SupabaseKong/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabaseKongTaskDef/SupabaseKong/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseKongService": {
            "id": "SupabaseKongService",
            "path": "SupabaseServicesStack/SupabaseKongService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabaseKongService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 600,
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Ref": "SupabaseKongTargetGroup392AE762"
                        },
                        "containerName": "SupabaseKong",
                        "containerPort": 8000
                      }
                    ],
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "platformVersion": "LATEST",
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabaseKongServiceCloudmapServiceA9BA8508",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabaseKongTaskDefBFA5573E"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabaseKongService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseKongService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "kong",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseKongTargetGroup": {
            "id": "SupabaseKongTargetGroup",
            "path": "SupabaseServicesStack/SupabaseKongTargetGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseKongTargetGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                  "aws:cdk:cloudformation:props": {
                    "healthCheckIntervalSeconds": 30,
                    "healthCheckPath": "/health",
                    "healthCheckTimeoutSeconds": 10,
                    "healthyThresholdCount": 2,
                    "matcher": {
                      "httpCode": "200-299"
                    },
                    "port": 8001,
                    "protocol": "HTTP",
                    "targetGroupAttributes": [
                      {
                        "key": "stickiness.enabled",
                        "value": "false"
                      }
                    ],
                    "targetType": "ip",
                    "unhealthyThresholdCount": 5,
                    "vpcId": {
                      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnTargetGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationTargetGroup",
              "version": "2.184.1"
            }
          },
          "SupabaseGotrueTaskDef": {
            "id": "SupabaseGotrueTaskDef",
            "path": "SupabaseServicesStack/SupabaseGotrueTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseGotrueTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/supabase/gotrue:v2.169.0",
                        "name": "SupabaseGotrue",
                        "portMappings": [
                          {
                            "containerPort": 9999,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabaseGotrueTaskDefSupabaseGotrueLogGroup40A13AAA"
                            },
                            "awslogs-stream-prefix": "supabase-gotrue",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai/auth/v1"
                          },
                          {
                            "name": "GOTRUE_DB_DRIVER",
                            "value": "postgres"
                          },
                          {
                            "name": "GOTRUE_API_HOST",
                            "value": "0.0.0.0"
                          },
                          {
                            "name": "GOTRUE_API_PORT",
                            "value": "9999"
                          },
                          {
                            "name": "GOTRUE_DB_NAME",
                            "value": "postgres"
                          },
                          {
                            "name": "GOTRUE_DB_HOST",
                            "value": "pooler.supabase.local"
                          },
                          {
                            "name": "GOTRUE_DB_PORT",
                            "value": "5432"
                          },
                          {
                            "name": "GOTRUE_DB_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "DISABLE_SIGNUP",
                            "value": "false"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "GOTRUE_DB_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "GOTRUE_JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "SERVICE_ROLE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "wget --no-verbose --tries=1 --spider http://localhost:9999/health || exit 1"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabaseGotrueTaskDef0CFFC4B2",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabaseGotrue": {
                "id": "SupabaseGotrue",
                "path": "SupabaseServicesStack/SupabaseGotrueTaskDef/SupabaseGotrue",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabaseGotrueTaskDef/SupabaseGotrue/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabaseGotrueTaskDef/SupabaseGotrue/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseGotrueService": {
            "id": "SupabaseGotrueService",
            "path": "SupabaseServicesStack/SupabaseGotrueService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabaseGotrueService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 300,
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabaseGotrueServiceCloudmapServiceF8604CB7",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabaseGotrueTaskDef2D300A6F"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabaseGotrueService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseGotrueService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "auth",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabasePostgrestTaskDef": {
            "id": "SupabasePostgrestTaskDef",
            "path": "SupabaseServicesStack/SupabasePostgrestTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabasePostgrestTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/postgrest/postgrest:v12.2.8",
                        "name": "SupabasePostgrest",
                        "portMappings": [
                          {
                            "containerPort": 3000,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabasePostgrestTaskDefSupabasePostgrestLogGroup80BDB325"
                            },
                            "awslogs-stream-prefix": "supabase-postgrest",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai"
                          },
                          {
                            "name": "PGRST_DB_URI",
                            "value": "postgres://postgres:${PGPASSWORD}@pooler.supabase.local:5432/postgres"
                          },
                          {
                            "name": "PGRST_DB_SCHEMA",
                            "value": "public"
                          },
                          {
                            "name": "PGRST_DB_ANON_ROLE",
                            "value": "anon"
                          },
                          {
                            "name": "PGRST_DB_USE_LEGACY_GUCS",
                            "value": "false"
                          },
                          {
                            "name": "PGRST_SERVER_PORT",
                            "value": "3000"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "PGPASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "PGRST_JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "SERVICE_ROLE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -f http://localhost:3000/ || exit 1"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabasePostgrestTaskDef6691B21E",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabasePostgrest": {
                "id": "SupabasePostgrest",
                "path": "SupabaseServicesStack/SupabasePostgrestTaskDef/SupabasePostgrest",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabasePostgrestTaskDef/SupabasePostgrest/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabasePostgrestTaskDef/SupabasePostgrest/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabasePostgrestService": {
            "id": "SupabasePostgrestService",
            "path": "SupabaseServicesStack/SupabasePostgrestService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabasePostgrestService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 300,
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabasePostgrestServiceCloudmapServiceB34DCFA8",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabasePostgrestTaskDefF7085D40"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabasePostgrestService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabasePostgrestService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "rest",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseRealtimeTaskDef": {
            "id": "SupabaseRealtimeTaskDef",
            "path": "SupabaseServicesStack/SupabaseRealtimeTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseRealtimeTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/supabase/realtime:v2.34.31",
                        "name": "SupabaseRealtime",
                        "portMappings": [
                          {
                            "containerPort": 4000,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabaseRealtimeTaskDefSupabaseRealtimeLogGroup07E7B687"
                            },
                            "awslogs-stream-prefix": "supabase-realtime",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai"
                          },
                          {
                            "name": "PORT",
                            "value": "4000"
                          },
                          {
                            "name": "DB_HOST",
                            "value": "pooler.supabase.local"
                          },
                          {
                            "name": "DB_PORT",
                            "value": "5432"
                          },
                          {
                            "name": "DB_NAME",
                            "value": "postgres"
                          },
                          {
                            "name": "DB_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "DB_SSL",
                            "value": "false"
                          },
                          {
                            "name": "SECURE_CHANNELS",
                            "value": "false"
                          },
                          {
                            "name": "REPLICATION_MODE",
                            "value": "RLS"
                          },
                          {
                            "name": "REPLICATION_POLL_INTERVAL",
                            "value": "100"
                          },
                          {
                            "name": "ERL_MAX_PORTS",
                            "value": "1048576"
                          },
                          {
                            "name": "EVENTS_QUEUE_SIZE",
                            "value": "100000"
                          },
                          {
                            "name": "EVENTS_QUEUE_POLL_INTERVAL",
                            "value": "100"
                          },
                          {
                            "name": "EVENTS_QUEUE_POLL_TIMEOUT",
                            "value": "100"
                          },
                          {
                            "name": "SUBSCRIPTION_SYNC_INTERVAL",
                            "value": "60000"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "DB_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "API_JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "SERVICE_ROLE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -f http://localhost:4000/healthz || exit 1"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        },
                        "linuxParameters": {
                          "initProcessEnabled": true,
                          "capabilities": {}
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabaseRealtimeTaskDef8C5657D9",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabaseRealtime": {
                "id": "SupabaseRealtime",
                "path": "SupabaseServicesStack/SupabaseRealtimeTaskDef/SupabaseRealtime",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabaseRealtimeTaskDef/SupabaseRealtime/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabaseRealtimeTaskDef/SupabaseRealtime/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "RealtimeLinuxParams": {
            "id": "RealtimeLinuxParams",
            "path": "SupabaseServicesStack/RealtimeLinuxParams",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.LinuxParameters",
              "version": "2.184.1"
            }
          },
          "SupabaseRealtimeService": {
            "id": "SupabaseRealtimeService",
            "path": "SupabaseServicesStack/SupabaseRealtimeService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabaseRealtimeService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 300,
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabaseRealtimeServiceCloudmapServiceE28C95A2",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabaseRealtimeTaskDef61C20B39"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabaseRealtimeService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseRealtimeService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "realtime",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseMetaTaskDef": {
            "id": "SupabaseMetaTaskDef",
            "path": "SupabaseServicesStack/SupabaseMetaTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseMetaTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/supabase/postgres-meta:v0.86.0",
                        "name": "SupabaseMeta",
                        "portMappings": [
                          {
                            "containerPort": 8080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabaseMetaTaskDefSupabaseMetaLogGroup973B9A17"
                            },
                            "awslogs-stream-prefix": "supabase-meta",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai"
                          },
                          {
                            "name": "PG_META_PORT",
                            "value": "8080"
                          },
                          {
                            "name": "PG_META_DB_HOST",
                            "value": "pooler.supabase.local"
                          },
                          {
                            "name": "PG_META_DB_PORT",
                            "value": "5432"
                          },
                          {
                            "name": "PG_META_DB_NAME",
                            "value": "postgres"
                          },
                          {
                            "name": "PG_META_DB_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "PG_META_DB_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "SERVICE_ROLE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -f http://localhost:8080/health || exit 1"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabaseMetaTaskDef422DF469",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabaseMeta": {
                "id": "SupabaseMeta",
                "path": "SupabaseServicesStack/SupabaseMetaTaskDef/SupabaseMeta",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabaseMetaTaskDef/SupabaseMeta/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabaseMetaTaskDef/SupabaseMeta/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseMetaService": {
            "id": "SupabaseMetaService",
            "path": "SupabaseServicesStack/SupabaseMetaService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabaseMetaService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 300,
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabaseMetaServiceCloudmapService630477A8",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabaseMetaTaskDef621F5592"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabaseMetaService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseMetaService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "meta",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseStudioTaskDef": {
            "id": "SupabaseStudioTaskDef",
            "path": "SupabaseServicesStack/SupabaseStudioTaskDef",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseStudioTaskDef/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "public.ecr.aws/supabase/studio:20250317-6955350",
                        "name": "SupabaseStudio",
                        "portMappings": [
                          {
                            "containerPort": 3000,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "SupabaseStudioTaskDefSupabaseStudioLogGroup5DDDC40B"
                            },
                            "awslogs-stream-prefix": "supabase-studio",
                            "awslogs-region": "us-east-2"
                          }
                        },
                        "environment": [
                          {
                            "name": "POSTGRES_HOST",
                            "value": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputFnGetAttSupabasePostgres0313787BEndpointAddressC585A80A"
                            }
                          },
                          {
                            "name": "POSTGRES_USER",
                            "value": "postgres"
                          },
                          {
                            "name": "POSTGRES_DB",
                            "value": "postgres"
                          },
                          {
                            "name": "REGION",
                            "value": "us-east-2"
                          },
                          {
                            "name": "SUPABASE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "ADDITIONAL_REDIRECT_URLS",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "API_EXTERNAL_URL",
                            "value": "https://api.eastmedical.ai"
                          },
                          {
                            "name": "STUDIO_PG_META_URL",
                            "value": "http://meta.supabase.local:8080"
                          },
                          {
                            "name": "SUPABASE_PUBLIC_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "SUPABASE_RESTURL",
                            "value": "http://rest.supabase.local:3000"
                          },
                          {
                            "name": "SUPABASE_REALTIMEURL",
                            "value": "http://realtime.supabase.local:4000"
                          },
                          {
                            "name": "SUPABASE_AUTHURL",
                            "value": "http://auth.supabase.local:9999"
                          },
                          {
                            "name": "NEXT_PUBLIC_SITE_URL",
                            "value": "https://supabase.eastmedical.ai"
                          },
                          {
                            "name": "DEFAULT_ORGANIZATION_NAME",
                            "value": "Default Organization"
                          },
                          {
                            "name": "DASHBOARD_USERNAME",
                            "value": "supabase"
                          },
                          {
                            "name": "DASHBOARD_PASSWORD",
                            "value": "supabase_strong_password"
                          },
                          {
                            "name": "STUDIO_PORT",
                            "value": "3000"
                          },
                          {
                            "name": "NODE_OPTIONS",
                            "value": "--dns-result-order=ipv4first"
                          },
                          {
                            "name": "DEBUG",
                            "value": "true"
                          },
                          {
                            "name": "SKIP_LIMITS_SCRIPT",
                            "value": "true"
                          }
                        ],
                        "secrets": [
                          {
                            "name": "STUDIO_ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "STUDIO_SERVICE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          },
                          {
                            "name": "POSTGRES_PASSWORD",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseDbPassword4F5D848DEB4E82E2"
                            }
                          },
                          {
                            "name": "JWT_SECRET",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseJwtSecret4CEDF7607C510DFE"
                            }
                          },
                          {
                            "name": "ANON_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseAnnonKey241C24696D2B27DF"
                            }
                          },
                          {
                            "name": "SERVICE_ROLE_KEY",
                            "valueFrom": {
                              "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabaseServiceRoleKey8194163DBF3B9EB0"
                            }
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -f http://localhost:3000/ || exit 1"
                          ],
                          "interval": 120,
                          "retries": 10,
                          "startPeriod": 300,
                          "timeout": 15
                        }
                      }
                    ],
                    "cpu": "512",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskExecutionRole0E31FB5D",
                        "Arn"
                      ]
                    },
                    "family": "SupabaseServicesStackSupabaseStudioTaskDef46E3FD74",
                    "memory": "1024",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "SupabaseTaskRoleFF032C96",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.184.1"
                }
              },
              "SupabaseStudio": {
                "id": "SupabaseStudio",
                "path": "SupabaseServicesStack/SupabaseStudioTaskDef/SupabaseStudio",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "SupabaseServicesStack/SupabaseStudioTaskDef/SupabaseStudio/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SupabaseServicesStack/SupabaseStudioTaskDef/SupabaseStudio/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 30
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseStudioService": {
            "id": "SupabaseStudioService",
            "path": "SupabaseServicesStack/SupabaseStudioService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "SupabaseServicesStack/SupabaseStudioService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "capacityProviderStrategy": [
                      {
                        "capacityProvider": "FARGATE",
                        "weight": 1
                      }
                    ],
                    "cluster": {
                      "Ref": "SupabaseCluster6B350E35"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50,
                      "alarms": {
                        "alarmNames": [],
                        "enable": false,
                        "rollback": false
                      }
                    },
                    "desiredCount": 1,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 600,
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
                          },
                          {
                            "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "SupabaseServiceSGF39DA778",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "platformVersion": "LATEST",
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "SupabaseStudioServiceCloudmapService9E29C4E9",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "SupabaseStudioTaskDef1AEFDD97"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.184.1"
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "SupabaseServicesStack/SupabaseStudioService/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SupabaseServicesStack/SupabaseStudioService/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 10
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "studio",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
                            "Id"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_servicediscovery.CfnService",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_servicediscovery.Service",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.FargateService",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseDnsRecord": {
            "id": "SupabaseDnsRecord",
            "path": "SupabaseServicesStack/SupabaseDnsRecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseDnsRecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "SupabaseALB4990A1B5",
                          "CanonicalHostedZoneID"
                        ]
                      },
                      "dnsName": {
                        "Fn::Join": [
                          "",
                          [
                            "dualstack.",
                            {
                              "Fn::GetAtt": [
                                "SupabaseALB4990A1B5",
                                "DNSName"
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "hostedZoneId": "Z055778020D8NH7RP81J5",
                    "name": "supabase.eastmedical.ai.",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseDashboard": {
            "id": "SupabaseDashboard",
            "path": "SupabaseServicesStack/SupabaseDashboard",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SupabaseServicesStack/SupabaseDashboard/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Dashboard",
                  "aws:cdk:cloudformation:props": {
                    "dashboardBody": {
                      "Fn::Join": [
                        "",
                        [
                          "{\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePoolerService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabasePoolerService02591873",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePoolerService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabasePoolerService02591873",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseKongService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseKongService132F4875",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseKongService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseKongService132F4875",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseGotrueService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseGotrueService284F1C38",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseGotrueService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseGotrueService284F1C38",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePostgrestService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabasePostgrestServiceD9B6553E",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePostgrestService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabasePostgrestServiceD9B6553E",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseRealtimeService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseRealtimeService689C04CD",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseRealtimeService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseRealtimeService689C04CD",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseMetaService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseMetaService71A8D970",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseMetaService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseMetaService71A8D970",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseStudioService CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseStudioService72BC584E",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseStudioService Memory Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
                          {
                            "Ref": "SupabaseCluster6B350E35"
                          },
                          "\",\"ServiceName\",\"",
                          {
                            "Fn::GetAtt": [
                              "SupabaseStudioService72BC584E",
                              "Name"
                            ]
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Database CPU Utilization\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/RDS\",\"CPUUtilization\",\"DBInstanceIdentifier\",\"",
                          {
                            "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabasePostgres0313787B30877F21"
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Database Connections\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/RDS\",\"DatabaseConnections\",\"DBInstanceIdentifier\",\"",
                          {
                            "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabasePostgres0313787B30877F21"
                          },
                          "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Database Free Storage Space\",\"region\":\"",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\",\"metrics\":[[\"AWS/RDS\",\"FreeStorageSpace\",\"DBInstanceIdentifier\",\"",
                          {
                            "Fn::ImportValue": "SupabaseDb:ExportsOutputRefSupabasePostgres0313787B30877F21"
                          },
                          "\"]],\"yAxis\":{}}}]}"
                        ]
                      ]
                    },
                    "dashboardName": "Supabase-Monitoring"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudwatch.CfnDashboard",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Dashboard",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "SupabaseURL": {
            "id": "SupabaseURL",
            "path": "SupabaseServicesStack/SupabaseURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "PgBouncerEndpoint": {
            "id": "PgBouncerEndpoint",
            "path": "SupabaseServicesStack/PgBouncerEndpoint",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "SupabaseNamespace": {
            "id": "SupabaseNamespace",
            "path": "SupabaseServicesStack/SupabaseNamespace",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "SupabaseServicesStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "SupabaseServicesStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "SupabaseServicesStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "SupabaseServicesStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "WebStack": {
        "id": "WebStack",
        "path": "WebStack",
        "children": {
          "ImportedCertificate": {
            "id": "ImportedCertificate",
            "path": "WebStack/ImportedCertificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "WebHostedZone": {
            "id": "WebHostedZone",
            "path": "WebStack/WebHostedZone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "RegionalCertificate": {
            "id": "RegionalCertificate",
            "path": "WebStack/RegionalCertificate",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/RegionalCertificate/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CertificateManager::Certificate",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "api.eastmedical.ai",
                    "domainValidationOptions": [
                      {
                        "domainName": "api.eastmedical.ai",
                        "hostedZoneId": "Z055778020D8NH7RP81J5"
                      }
                    ],
                    "tags": [
                      {
                        "key": "Name",
                        "value": "WebStack/RegionalCertificate"
                      }
                    ],
                    "validationMethod": "DNS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_certificatemanager.CfnCertificate",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_certificatemanager.Certificate",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "UIBucket": {
            "id": "UIBucket",
            "path": "WebStack/UIBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/UIBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "AES256"
                          }
                        }
                      ]
                    },
                    "bucketName": "eastmedical.ai-ui",
                    "corsConfiguration": {
                      "corsRules": [
                        {
                          "maxAge": 3000,
                          "allowedHeaders": [
                            "*"
                          ],
                          "allowedMethods": [
                            "GET"
                          ],
                          "allowedOrigins": [
                            "https://app.eastmedical.ai"
                          ]
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "aws-cdk:cr-owned:a4e50a79",
                        "value": "true"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.184.1"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "WebStack/UIBucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/UIBucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "UIBucketB980636D"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "UIBucketB980636D",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "UIBucketB980636D",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "UIBucketB980636D",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "UIBucketB980636D",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "UIDistributionOrigin1S3Origin80D2A7D1",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "UIBucketB980636D",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "s3:GetObject",
                              "Condition": {
                                "StringEquals": {
                                  "AWS:SourceArn": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:cloudfront::302263086944:distribution/",
                                        {
                                          "Ref": "UIDistribution2F12206B"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "cloudfront.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "UIBucketB980636D",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "WebStack/UIBucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebStack/UIBucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "WebStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.184.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.184.1"
            }
          },
          "UICachePolicy": {
            "id": "UICachePolicy",
            "path": "WebStack/UICachePolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/UICachePolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CachePolicy",
                  "aws:cdk:cloudformation:props": {
                    "cachePolicyConfig": {
                      "name": "WebStackUICachePolicy384800EE-us-east-2",
                      "minTtl": 300,
                      "maxTtl": 86400,
                      "defaultTtl": 3600,
                      "parametersInCacheKeyAndForwardedToOrigin": {
                        "cookiesConfig": {
                          "cookieBehavior": "none"
                        },
                        "headersConfig": {
                          "headerBehavior": "whitelist",
                          "headers": [
                            "Authorization"
                          ]
                        },
                        "enableAcceptEncodingGzip": true,
                        "enableAcceptEncodingBrotli": true,
                        "queryStringsConfig": {
                          "queryStringBehavior": "all"
                        }
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnCachePolicy",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.CachePolicy",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "UIDistribution": {
            "id": "UIDistribution",
            "path": "WebStack/UIDistribution",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "WebStack/UIDistribution/Origin1",
                "children": {
                  "S3Origin": {
                    "id": "S3Origin",
                    "path": "WebStack/UIDistribution/Origin1/S3Origin",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/UIDistribution/Origin1/S3Origin/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                          "aws:cdk:cloudformation:props": {
                            "cloudFrontOriginAccessIdentityConfig": {
                              "comment": "Identity for WebStackUIDistributionOrigin1719B9F43"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.4.2"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebStack/UIDistribution/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "UIBucketB980636D",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "WebStackUIDistributionOrigin1719B9F43",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "UIDistributionOrigin1S3Origin80D2A7D1"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "WebStackUIDistributionOrigin1719B9F43",
                        "allowedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "cachedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "cachePolicyId": {
                          "Ref": "UICachePolicy055D3077"
                        },
                        "compress": true,
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "aliases": [
                        "app.eastmedical.ai"
                      ],
                      "customErrorResponses": [
                        {
                          "errorCode": 403,
                          "responseCode": 200,
                          "responsePagePath": "/index.html"
                        },
                        {
                          "errorCode": 404,
                          "responseCode": 200,
                          "responsePagePath": "/index.html"
                        }
                      ],
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2and3",
                      "ipv6Enabled": true,
                      "viewerCertificate": {
                        "acmCertificateArn": {
                          "Fn::GetAtt": [
                            "ExportsReader8B249524",
                            "/cdk/exports/Web/WhisperProcessingCertificateuseast1RefCertificate4E7ABB08B6A78DF3"
                          ]
                        },
                        "minimumProtocolVersion": "TLSv1.2_2021",
                        "sslSupportMethod": "sni-only"
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "UIDeployment": {
            "id": "UIDeployment",
            "path": "WebStack/UIDeployment",
            "children": {
              "AwsCliLayer": {
                "id": "AwsCliLayer",
                "path": "WebStack/UIDeployment/AwsCliLayer",
                "children": {
                  "Code": {
                    "id": "Code",
                    "path": "WebStack/UIDeployment/AwsCliLayer/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "WebStack/UIDeployment/AwsCliLayer/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.184.1"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "WebStack/UIDeployment/AwsCliLayer/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.184.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/UIDeployment/AwsCliLayer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::LayerVersion",
                      "aws:cdk:cloudformation:props": {
                        "content": {
                          "s3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
                          "s3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
                        },
                        "description": "/opt/awscli/aws"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnLayerVersion",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.lambda_layer_awscli.AwsCliLayer",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "CustomResourceHandler": {
                "id": "CustomResourceHandler",
                "path": "WebStack/UIDeployment/CustomResourceHandler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.SingletonFunction",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Asset1": {
                "id": "Asset1",
                "path": "WebStack/UIDeployment/Asset1",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebStack/UIDeployment/Asset1/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.184.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebStack/UIDeployment/Asset1/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.184.1"
                }
              },
              "CustomResource-1024MiB": {
                "id": "CustomResource-1024MiB",
                "path": "WebStack/UIDeployment/CustomResource-1024MiB",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebStack/UIDeployment/CustomResource-1024MiB/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3_deployment.BucketDeployment",
              "version": "2.184.1"
            }
          },
          "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB": {
            "id": "Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB",
            "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::cdk-hnb659fds-assets-302263086944-us-east-2"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::cdk-hnb659fds-assets-302263086944-us-east-2/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "UIBucketB980636D",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "UIBucketB980636D",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "cloudfront:GetInvalidation",
                                    "cloudfront:CreateInvalidation"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
                            "roles": [
                              {
                                "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.184.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.184.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
                      "s3Key": "c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762.zip"
                    },
                    "environment": {
                      "variables": {
                        "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
                      }
                    },
                    "handler": "index.handler",
                    "layers": [
                      {
                        "Ref": "UIDeploymentAwsCliLayer90F5818D"
                      }
                    ],
                    "memorySize": 1024,
                    "role": {
                      "Fn::GetAtt": [
                        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.11",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "UIARecord": {
            "id": "UIARecord",
            "path": "WebStack/UIARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/UIARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "aliasTarget": {
                      "hostedZoneId": {
                        "Fn::FindInMap": [
                          "AWSCloudFrontPartitionHostedZoneIdMap",
                          {
                            "Ref": "AWS::Partition"
                          },
                          "zoneId"
                        ]
                      },
                      "dnsName": {
                        "Fn::GetAtt": [
                          "UIDistribution2F12206B",
                          "DomainName"
                        ]
                      }
                    },
                    "hostedZoneId": "Z055778020D8NH7RP81J5",
                    "name": "app.eastmedical.ai.",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "AWSCloudFrontPartitionHostedZoneIdMap": {
            "id": "AWSCloudFrontPartitionHostedZoneIdMap",
            "path": "WebStack/AWSCloudFrontPartitionHostedZoneIdMap",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnMapping",
              "version": "2.184.1"
            }
          },
          "APIStackIdentifier": {
            "id": "APIStackIdentifier",
            "path": "WebStack/APIStackIdentifier",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "AppCredentials": {
            "id": "AppCredentials",
            "path": "WebStack/AppCredentials",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/AppCredentials/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "description": "Credentials for the application",
                    "generateSecretString": {
                      "secretStringTemplate": "{\"SUPABASE_URL\":\"\",\"SUPABASE_KEY\":\"\",\"SUPABASE_SERVICE_ROLE_KEY\":\"\",\"OPENAI_API_KEY\":\"\",\"API_TOKEN\":\"\"}",
                      "generateStringKey": "dummy"
                    },
                    "name": "app-credentials"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_secretsmanager.Secret",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "APIFunction": {
            "id": "APIFunction",
            "path": "WebStack/APIFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebStack/APIFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebStack/APIFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/APIFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebStack/APIFunction/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/APIFunction/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "secretsmanager:GetSecretValue",
                                    "secretsmanager:DescribeSecret"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Ref": "AppCredentials06DBAC7C"
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files"
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":s3:::whisperprocessing-files/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::ImportValue": "WhisperProcessing:ExportsOutputFnGetAttWhisperProcessingQueue902D22B9Arn9F894375"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "APIFunctionServiceRoleDefaultPolicy55C0651E",
                            "roles": [
                              {
                                "Ref": "APIFunctionServiceRole411B6D35"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebStack/APIFunction/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebStack/APIFunction/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.184.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebStack/APIFunction/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.184.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebStack/APIFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
                      "s3Key": "a8add8f02d2fa0d7f215b39d4944e3bf4add2360fd618dfb78821ffde0c78538.zip"
                    },
                    "description": "Lambda function serving the API",
                    "environment": {
                      "variables": {
                        "NODE_ENV": "production",
                        "S3_BUCKET_NAME": "whisperprocessing-files",
                        "WHISPER_QUEUE_URL": {
                          "Fn::ImportValue": "WhisperProcessing:ExportsOutputRefWhisperProcessingQueue902D22B9313A56D8"
                        },
                        "APP_SECRET_ARN": {
                          "Ref": "AppCredentials06DBAC7C"
                        }
                      }
                    },
                    "handler": "index.handler",
                    "memorySize": 1536,
                    "role": {
                      "Fn::GetAtt": [
                        "APIFunctionServiceRole411B6D35",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs20.x",
                    "timeout": 300,
                    "tracingConfig": {
                      "mode": "Active"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.184.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebStack/APIFunction/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/APIFunction/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.184.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebStack/APIFunction/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.184.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.184.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "ApiLogGroup": {
            "id": "ApiLogGroup",
            "path": "WebStack/ApiLogGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/ApiLogGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "logGroupName": {
                      "Fn::Join": [
                        "",
                        [
                          "/aws/lambda/",
                          {
                            "Ref": "APIFunction49CD189B"
                          }
                        ]
                      ]
                    },
                    "retentionInDays": 7
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_logs.LogGroup",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "API": {
            "id": "API",
            "path": "WebStack/API",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/API/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "EastMedical API"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.184.1"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebStack/API/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebStack/API/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/API/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebStack/API/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "APICloudWatchRole927CEB3B",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.184.1"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebStack/API/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/API/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "description": "Automatically created by the RestApi construct",
                        "restApiId": {
                          "Ref": "API62EA1CFF"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "WebStack/API/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/API/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "deploymentId": {
                          "Ref": "APIDeployment0E06874E6adc7a0f411c03397d9ec1a93bc9e378"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": true,
                            "loggingLevel": "INFO",
                            "metricsEnabled": true
                          }
                        ],
                        "restApiId": {
                          "Ref": "API62EA1CFF"
                        },
                        "stageName": "prod"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebStack/API/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.184.1"
                }
              },
              "CustomDomain": {
                "id": "CustomDomain",
                "path": "WebStack/API/CustomDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebStack/API/CustomDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "api.eastmedical.ai",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": {
                          "Ref": "RegionalCertificate5C8CFF45"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.184.1"
                    }
                  },
                  "Map:--=>WebStackAPIF1F342DE": {
                    "id": "Map:--=>WebStackAPIF1F342DE",
                    "path": "WebStack/API/CustomDomain/Map:--=>WebStackAPIF1F342DE",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/API/CustomDomain/Map:--=>WebStackAPIF1F342DE/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "APICustomDomain7C8980EC"
                            },
                            "restApiId": {
                              "Ref": "API62EA1CFF"
                            },
                            "stage": {
                              "Ref": "APIDeploymentStageprod278E75BA"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.184.1",
                  "metadata": []
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebStack/API/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebStack/API/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/API/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "httpMethod": "OPTIONS",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'",
                                    "method.response.header.Access-Control-Allow-Origin": "'https://eastmedical.ai'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.eastmedical.ai\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ],
                            "resourceId": {
                              "Fn::GetAtt": [
                                "API62EA1CFF",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "API62EA1CFF"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "{proxy+}": {
                    "id": "{proxy+}",
                    "path": "WebStack/API/Default/{proxy+}",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/API/Default/{proxy+}/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "API62EA1CFF",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "{proxy+}",
                            "restApiId": {
                              "Ref": "API62EA1CFF"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.184.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebStack/API/Default/{proxy+}/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebStack/API/Default/{proxy+}/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "httpMethod": "OPTIONS",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'",
                                        "method.response.header.Access-Control-Allow-Origin": "'https://eastmedical.ai'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.eastmedical.ai\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ],
                                "resourceId": {
                                  "Ref": "APIproxy35016696"
                                },
                                "restApiId": {
                                  "Ref": "API62EA1CFF"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.184.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      },
                      "ANY": {
                        "id": "ANY",
                        "path": "WebStack/API/Default/{proxy+}/ANY",
                        "children": {
                          "ApiPermission.WebStackAPIF1F342DE.ANY..{proxy+}": {
                            "id": "ApiPermission.WebStackAPIF1F342DE.ANY..{proxy+}",
                            "path": "WebStack/API/Default/{proxy+}/ANY/ApiPermission.WebStackAPIF1F342DE.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "APIFunction49CD189B",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-2:302263086944:",
                                      {
                                        "Ref": "API62EA1CFF"
                                      },
                                      "/",
                                      {
                                        "Ref": "APIDeploymentStageprod278E75BA"
                                      },
                                      "/*/*"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.184.1"
                            }
                          },
                          "ApiPermission.Test.WebStackAPIF1F342DE.ANY..{proxy+}": {
                            "id": "ApiPermission.Test.WebStackAPIF1F342DE.ANY..{proxy+}",
                            "path": "WebStack/API/Default/{proxy+}/ANY/ApiPermission.Test.WebStackAPIF1F342DE.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "APIFunction49CD189B",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-2:302263086944:",
                                      {
                                        "Ref": "API62EA1CFF"
                                      },
                                      "/test-invoke-stage/*/*"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.184.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebStack/API/Default/{proxy+}/ANY/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "NONE",
                                "httpMethod": "ANY",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "APIFunction49CD189B",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST",
                                  "integrationResponses": [
                                    {
                                      "statusCode": "200",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                                      }
                                    },
                                    {
                                      "selectionPattern": ".*ERROR.*",
                                      "statusCode": "500",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                                      }
                                    }
                                  ],
                                  "timeoutInMillis": 29000
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "200",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Origin": true
                                    }
                                  },
                                  {
                                    "statusCode": "500",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Origin": true
                                    }
                                  }
                                ],
                                "resourceId": {
                                  "Ref": "APIproxy35016696"
                                },
                                "restApiId": {
                                  "Ref": "API62EA1CFF"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.184.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.184.1",
                          "metadata": []
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.ProxyResource",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  },
                  "ANY": {
                    "id": "ANY",
                    "path": "WebStack/API/Default/ANY",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebStack/API/Default/ANY/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "authorizationType": "NONE",
                            "httpMethod": "ANY",
                            "integration": {
                              "type": "MOCK"
                            },
                            "resourceId": {
                              "Fn::GetAtt": [
                                "API62EA1CFF",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "API62EA1CFF"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.184.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.184.1",
                      "metadata": []
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "ApiErrorAlarm": {
            "id": "ApiErrorAlarm",
            "path": "WebStack/ApiErrorAlarm",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/ApiErrorAlarm/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "actionsEnabled": true,
                    "alarmDescription": "API has high error rate",
                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                    "dimensions": [
                      {
                        "name": "ApiName",
                        "value": "EastMedical API"
                      },
                      {
                        "name": "Stage",
                        "value": "prod"
                      }
                    ],
                    "evaluationPeriods": 1,
                    "metricName": "5XXError",
                    "namespace": "AWS/ApiGateway",
                    "period": 300,
                    "statistic": "Sum",
                    "threshold": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudwatch.CfnAlarm",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Alarm",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "APIARecord": {
            "id": "APIARecord",
            "path": "WebStack/APIARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/APIARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "APICustomDomain7C8980EC",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "APICustomDomain7C8980EC",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z055778020D8NH7RP81J5",
                    "name": "api.eastmedical.ai.",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.184.1",
              "metadata": []
            }
          },
          "UIURL": {
            "id": "UIURL",
            "path": "WebStack/UIURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "APIURL": {
            "id": "APIURL",
            "path": "WebStack/APIURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.184.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "ExportsReader": {
            "id": "ExportsReader",
            "path": "WebStack/ExportsReader",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebStack/ExportsReader/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebStack/ExportsReader/Resource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.184.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.184.1",
                  "metadata": []
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Custom::CrossRegionExportReaderCustomResourceProvider": {
            "id": "Custom::CrossRegionExportReaderCustomResourceProvider",
            "path": "WebStack/Custom::CrossRegionExportReaderCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebStack/Custom::CrossRegionExportReaderCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.184.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebStack/Custom::CrossRegionExportReaderCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebStack/Custom::CrossRegionExportReaderCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.184.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.184.1"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.184.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.184.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.184.1"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.4.2"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.184.1"
    }
  }
}