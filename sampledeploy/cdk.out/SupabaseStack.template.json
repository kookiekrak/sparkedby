{
 "Resources": {
  "SupabaseCertificate2E339463": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "supabase.eastmedical.ai",
    "DomainValidationOptions": [
     {
      "DomainName": "supabase.eastmedical.ai",
      "HostedZoneId": "Z055778020D8NH7RP81J5"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "SupabaseStack/SupabaseCertificate"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseCertificate/Resource"
   }
  },
  "SupabaseDbSGF87AE160": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Supabase database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseDbSG/Resource"
   }
  },
  "SupabaseDbSGfromSupabaseStackSupabaseServiceSGE6056ABF54325181CEE0": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow Supabase services to connect to PostgreSQL",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "SupabaseDbSGF87AE160",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SupabaseServiceSGF39DA778",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseDbSG/from SupabaseStackSupabaseServiceSGE6056ABF:5432"
   }
  },
  "SupabaseServiceSGF39DA778": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Supabase ECS services",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseServiceSG/Resource"
   }
  },
  "SupabaseServiceSGfromSupabaseStackSupabaseServiceSGE6056ABFALLPORTS47686534": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow internal communication between Supabase services",
    "FromPort": 0,
    "GroupId": {
     "Fn::GetAtt": [
      "SupabaseServiceSGF39DA778",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SupabaseServiceSGF39DA778",
      "GroupId"
     ]
    },
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseServiceSG/from SupabaseStackSupabaseServiceSGE6056ABF:ALL PORTS"
   }
  },
  "SupabaseServiceSGfromSupabaseStackSupabaseLbSGE8804B0E802B39A779": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow load balancer to connect to services",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "SupabaseServiceSGF39DA778",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SupabaseLbSG67458248",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseServiceSG/from SupabaseStackSupabaseLbSGE8804B0E:80"
   }
  },
  "SupabaseServiceSGfromSupabaseStackSupabaseLbSGE8804B0E80009FD3A6AD": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 8000,
    "GroupId": {
     "Fn::GetAtt": [
      "SupabaseServiceSGF39DA778",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SupabaseLbSG67458248",
      "GroupId"
     ]
    },
    "ToPort": 8000
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseServiceSG/from SupabaseStackSupabaseLbSGE8804B0E:8000"
   }
  },
  "SupabaseLbSG67458248": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Supabase load balancer",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseLbSG/Resource"
   }
  },
  "SupabaseDbPassword4F5D848D": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Password for Supabase PostgreSQL database",
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "IncludeSpace": false,
     "PasswordLength": 16
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseDbPassword/Resource"
   }
  },
  "SupabaseJwtSecret4CEDF760": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "JWT secret for Supabase auth",
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "IncludeSpace": false,
     "PasswordLength": 40
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseJwtSecret/Resource"
   }
  },
  "SupabaseAnnonKey241C2469": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Anon key for Supabase",
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "IncludeSpace": false,
     "PasswordLength": 40
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseAnnonKey/Resource"
   }
  },
  "SupabaseServiceRoleKey8194163D": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Service role key for Supabase",
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "IncludeSpace": false,
     "PasswordLength": 40
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseServiceRoleKey/Resource"
   }
  },
  "SupabasePostgresParams09AFEB1E": {
   "Type": "AWS::RDS::DBParameterGroup",
   "Properties": {
    "Description": "Parameter group for postgres15",
    "Family": "postgres15",
    "Parameters": {
     "pgaudit.log": "ALL",
     "pgaudit.role": "rds_pgaudit",
     "shared_preload_libraries": "pg_stat_statements,pgaudit"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgresParams/Resource"
   }
  },
  "SupabasePostgresSubnetGroupF9DCE382": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for SupabasePostgres database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
     },
     {
      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgres/SubnetGroup/Default"
   }
  },
  "SupabasePostgres0313787B": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "AutoMinorVersionUpgrade": true,
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t4g.small",
    "DBName": "postgres",
    "DBParameterGroupName": {
     "Ref": "SupabasePostgresParams09AFEB1E"
    },
    "DBSubnetGroupName": {
     "Ref": "SupabasePostgresSubnetGroupF9DCE382"
    },
    "DeletionProtection": false,
    "Engine": "postgres",
    "EngineVersion": "15",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "SupabaseDbPassword4F5D848D"
       },
       ":SecretString:::}}"
      ]
     ]
    },
    "MasterUsername": "postgres",
    "MaxAllocatedStorage": 100,
    "MultiAZ": false,
    "PubliclyAccessible": false,
    "StorageType": "gp3",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "SupabaseDbSGF87AE160",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgres/Resource"
   }
  },
  "SupabaseCluster6B350E35": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "enabled"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseCluster/Resource"
   }
  },
  "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77": {
   "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
   "Properties": {
    "Name": "supabase.local",
    "Vpc": {
     "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseCluster/DefaultServiceDiscoveryNamespace/Resource"
   }
  },
  "SupabaseTaskExecutionRole0E31FB5D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseTaskExecutionRole/Resource"
   }
  },
  "SupabaseTaskExecutionRoleDefaultPolicyC0F00D50": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "SupabaseDbPassword4F5D848D"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "SupabaseJwtSecret4CEDF760"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "SupabaseAnnonKey241C2469"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "SupabaseServiceRoleKey8194163D"
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":secretsmanager:us-east-2:302263086944:secret:supabase/dockerhub-credentials"
         ]
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "DockerHubCredentialsFormatted04C1459D"
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabasePgbouncerTaskDefSupabasePgbouncerLogGroupC38CD4F6",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabaseKongTaskDefSupabaseKongLogGroup7340D297",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabaseGotrueTaskDefSupabaseGotrueLogGroup40A13AAA",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabasePostgrestTaskDefSupabasePostgrestLogGroup80BDB325",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabaseRealtimeTaskDefSupabaseRealtimeLogGroup07E7B687",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabaseMetaTaskDefSupabaseMetaLogGroup973B9A17",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SupabaseStudioTaskDefSupabaseStudioLogGroup5DDDC40B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SupabaseTaskExecutionRoleDefaultPolicyC0F00D50",
    "Roles": [
     {
      "Ref": "SupabaseTaskExecutionRole0E31FB5D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseTaskExecutionRole/DefaultPolicy/Resource"
   }
  },
  "DockerHubCredentialsFormatted04C1459D": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "GenerateStringKey": "dummy",
     "SecretStringTemplate": {
      "Fn::Join": [
       "",
       [
        "{\"username\":\"{{resolve:secretsmanager:arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":secretsmanager:us-east-2:302263086944:secret:supabase/dockerhub-credentials:SecretString:username}}\",\"password\":\"{{resolve:secretsmanager:arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":secretsmanager:us-east-2:302263086944:secret:supabase/dockerhub-credentials:SecretString:password}}\"}"
       ]
      ]
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/DockerHubCredentialsFormatted/Resource"
   }
  },
  "SupabaseTaskRoleFF032C96": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseTaskRole/Resource"
   }
  },
  "SupabaseALB4990A1B5": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "SupabaseLbSG67458248",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcpublicSubnet1Subnet8B290348F6FC1372"
     },
     {
      "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcpublicSubnet2SubnetE497BB00B8DAA4FE"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseALB/Resource"
   }
  },
  "SupabaseALBSupabaseHttpsListenerD7C3A153": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "Certificates": [
     {
      "CertificateArn": {
       "Ref": "SupabaseCertificate2E339463"
      }
     }
    ],
    "DefaultActions": [
     {
      "FixedResponseConfig": {
       "ContentType": "text/plain",
       "MessageBody": "Not Found",
       "StatusCode": "404"
      },
      "Type": "fixed-response"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "SupabaseALB4990A1B5"
    },
    "Port": 443,
    "Protocol": "HTTPS"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseALB/SupabaseHttpsListener/Resource"
   }
  },
  "SupabaseALBSupabaseHttpsListenerSupabaseKongTargetRule43533AA9": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "SupabaseKongTargetGroup392AE762"
      },
      "Type": "forward"
     }
    ],
    "Conditions": [
     {
      "Field": "host-header",
      "HostHeaderConfig": {
       "Values": [
        "supabase.eastmedical.ai"
       ]
      }
     }
    ],
    "ListenerArn": {
     "Ref": "SupabaseALBSupabaseHttpsListenerD7C3A153"
    },
    "Priority": 10
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseALB/SupabaseHttpsListener/SupabaseKongTargetRule/Resource"
   }
  },
  "SupabaseALBSupabaseHttpListener8A24F474": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "RedirectConfig": {
       "Port": "443",
       "Protocol": "HTTPS",
       "StatusCode": "HTTP_301"
      },
      "Type": "redirect"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "SupabaseALB4990A1B5"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseALB/SupabaseHttpListener/Resource"
   }
  },
  "SupabasePgbouncerTaskDefDA27AE75": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "DB_USER",
        "Value": "postgres"
       },
       {
        "Name": "DB_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "DB_NAME",
        "Value": "postgres"
       },
       {
        "Name": "POOL_MODE",
        "Value": "transaction"
       },
       {
        "Name": "MAX_CLIENT_CONN",
        "Value": "1000"
       },
       {
        "Name": "DEFAULT_POOL_SIZE",
        "Value": "100"
       },
       {
        "Name": "SERVER_RESET_QUERY",
        "Value": "DISCARD ALL"
       },
       {
        "Name": "ADMIN_USERS",
        "Value": "postgres"
       },
       {
        "Name": "DNS_MAX_TTL",
        "Value": "15"
       },
       {
        "Name": "DNS_ZONE",
        "Value": "supabase.local"
       },
       {
        "Name": "DNS_NXDOMAIN_TTL",
        "Value": "15"
       },
       {
        "Name": "TCP_KEEPALIVE",
        "Value": "1"
       },
       {
        "Name": "TCP_KEEPIDLE",
        "Value": "60"
       },
       {
        "Name": "TCP_KEEPINTVL",
        "Value": "30"
       },
       {
        "Name": "LISTEN_PORT",
        "Value": "6432"
       },
       {
        "Name": "LISTEN_ADDR",
        "Value": "*"
       },
       {
        "Name": "AUTH_TYPE",
        "Value": "md5"
       },
       {
        "Name": "IGNORE_STARTUP_PARAMETERS",
        "Value": "extra_float_digits"
       },
       {
        "Name": "MAX_DB_CONNECTIONS",
        "Value": "100"
       },
       {
        "Name": "MIN_POOL_SIZE",
        "Value": "10"
       },
       {
        "Name": "RESERVE_POOL_SIZE",
        "Value": "10"
       },
       {
        "Name": "RESERVE_POOL_TIMEOUT",
        "Value": "5"
       },
       {
        "Name": "SERVER_IDLE_TIMEOUT",
        "Value": "300"
       },
       {
        "Name": "SERVER_LIFETIME",
        "Value": "3600"
       },
       {
        "Name": "SERVER_CONNECT_TIMEOUT",
        "Value": "15"
       },
       {
        "Name": "APPLICATION_NAME_ADD_HOST",
        "Value": "1"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "PGPASSWORD=${DB_PASSWORD} pg_isready -h 127.0.0.1 -p 6432 -U postgres -d postgres || exit 1"
       ],
       "Interval": 60,
       "Retries": 5,
       "StartPeriod": 120,
       "Timeout": 10
      },
      "Image": "edoburu/pgbouncer:1.18.0",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabasePgbouncerTaskDefSupabasePgbouncerLogGroupC38CD4F6"
        },
        "awslogs-stream-prefix": "supabase-pgbouncer",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabasePgbouncer",
      "PortMappings": [
       {
        "ContainerPort": 6432,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "DB_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabasePgbouncerTaskDef496975BA",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePgbouncerTaskDef/Resource"
   }
  },
  "SupabasePgbouncerTaskDefSupabasePgbouncerLogGroupC38CD4F6": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePgbouncerTaskDef/SupabasePgbouncer/LogGroup/Resource"
   }
  },
  "SupabasePgbouncerService72F85B7F": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 600,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "PlatformVersion": "LATEST",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabasePgbouncerTaskDefDA27AE75"
    }
   },
   "DependsOn": [
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePgbouncerService/Service"
   }
  },
  "SupabasePgbouncerServiceCloudmapServiceF7A53EC4": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "pgbouncer",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePgbouncerService/CloudmapService/Resource"
   }
  },
  "SupabaseKongTaskDefBFA5573E": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRES_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "POSTGRES_USER",
        "Value": "postgres"
       },
       {
        "Name": "POSTGRES_DB",
        "Value": "postgres"
       },
       {
        "Name": "REGION",
        "Value": "us-east-2"
       },
       {
        "Name": "SUPABASE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "ADDITIONAL_REDIRECT_URLS",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "API_EXTERNAL_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "KONG_DATABASE",
        "Value": "off"
       },
       {
        "Name": "KONG_DNS_ORDER",
        "Value": "LAST,A,CNAME"
       },
       {
        "Name": "KONG_PLUGINS",
        "Value": "request-transformer,cors,key-auth,acl,basic-auth"
       },
       {
        "Name": "KONG_DNS_RESOLVER",
        "Value": "169.254.169.253"
       },
       {
        "Name": "KONG_PROXY_LISTEN",
        "Value": "0.0.0.0:8000"
       },
       {
        "Name": "KONG_ADMIN_LISTEN",
        "Value": "0.0.0.0:8001"
       },
       {
        "Name": "KONG_PROXY_LISTEN_SSL",
        "Value": "0.0.0.0:8443"
       },
       {
        "Name": "KONG_ADMIN_LISTEN_SSL",
        "Value": "0.0.0.0:8444"
       },
       {
        "Name": "KONG_NGINX_PROXY_PROXY_BUFFER_SIZE",
        "Value": "160k"
       },
       {
        "Name": "KONG_NGINX_PROXY_PROXY_BUFFERS",
        "Value": "64 160k"
       },
       {
        "Name": "KONG_DECLARATIVE_CONFIG_STRING",
        "Value": "{\"_format_version\":\"2.1\",\"_transform\":true,\"services\":[{\"name\":\"auth-v1\",\"url\":\"http://auth.supabase.local:9999/verify\",\"routes\":[{\"name\":\"auth-v1-route\",\"strip_path\":true,\"paths\":[\"/auth/v1/verify\"]}]},{\"name\":\"rest-v1\",\"url\":\"http://rest.supabase.local:3000\",\"routes\":[{\"name\":\"rest-v1-route\",\"strip_path\":true,\"paths\":[\"/rest/v1\"]}]},{\"name\":\"realtime-v1\",\"url\":\"http://realtime.supabase.local:4000/socket\",\"routes\":[{\"name\":\"realtime-v1-route\",\"strip_path\":true,\"paths\":[\"/realtime/v1\"]}]},{\"name\":\"meta-v1\",\"url\":\"http://meta.supabase.local:8080\",\"routes\":[{\"name\":\"meta-v1-route\",\"strip_path\":true,\"paths\":[\"/meta/v1\"]}]}],\"plugins\":[{\"name\":\"cors\",\"config\":{\"origins\":[\"*\"],\"methods\":[\"GET\",\"POST\",\"PUT\",\"PATCH\",\"DELETE\",\"OPTIONS\"],\"headers\":[\"Accept\",\"Accept-Version\",\"Content-Length\",\"Content-MD5\",\"Content-Type\",\"Date\",\"Authorization\"],\"exposed_headers\":[\"Content-Length\",\"Content-Range\"],\"credentials\":true,\"max_age\":3600}}]}"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "/usr/local/bin/kong health || exit 1"
       ],
       "Interval": 30,
       "Retries": 3,
       "StartPeriod": 10,
       "Timeout": 5
      },
      "Image": "kong:2.8.1-alpine",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabaseKongTaskDefSupabaseKongLogGroup7340D297"
        },
        "awslogs-stream-prefix": "supabase-kong",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabaseKong",
      "PortMappings": [
       {
        "ContainerPort": 8000,
        "Protocol": "tcp"
       },
       {
        "ContainerPort": 8443,
        "Protocol": "tcp"
       },
       {
        "ContainerPort": 8001,
        "Protocol": "tcp"
       },
       {
        "ContainerPort": 8444,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "POSTGRES_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "SERVICE_ROLE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabaseKongTaskDef0F476D6F",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseKongTaskDef/Resource"
   }
  },
  "SupabaseKongTaskDefSupabaseKongLogGroup7340D297": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseKongTaskDef/SupabaseKong/LogGroup/Resource"
   }
  },
  "SupabaseKongService132F4875": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "SupabaseKong",
      "ContainerPort": 8000,
      "TargetGroupArn": {
       "Ref": "SupabaseKongTargetGroup392AE762"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabaseKongServiceCloudmapServiceA9BA8508",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabaseKongTaskDefBFA5573E"
    }
   },
   "DependsOn": [
    "SupabaseALBSupabaseHttpsListenerSupabaseKongTargetRule43533AA9",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseKongService/Service"
   }
  },
  "SupabaseKongServiceCloudmapServiceA9BA8508": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "kong",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseKongService/CloudmapService/Resource"
   }
  },
  "SupabaseKongTargetGroup392AE762": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 10,
    "HealthCheckPath": "/health",
    "HealthCheckTimeoutSeconds": 5,
    "Matcher": {
     "HttpCode": "200-299"
    },
    "Port": 8000,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpc96F0F6140AE947C7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseKongTargetGroup/Resource"
   }
  },
  "SupabaseGotrueTaskDef2D300A6F": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRES_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "POSTGRES_USER",
        "Value": "postgres"
       },
       {
        "Name": "POSTGRES_DB",
        "Value": "postgres"
       },
       {
        "Name": "REGION",
        "Value": "us-east-2"
       },
       {
        "Name": "SUPABASE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "ADDITIONAL_REDIRECT_URLS",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "API_EXTERNAL_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "GOTRUE_DB_DRIVER",
        "Value": "postgres"
       },
       {
        "Name": "GOTRUE_API_HOST",
        "Value": "0.0.0.0"
       },
       {
        "Name": "GOTRUE_API_PORT",
        "Value": "9999"
       },
       {
        "Name": "GOTRUE_DB_NAME",
        "Value": "postgres"
       },
       {
        "Name": "GOTRUE_DB_HOST",
        "Value": "pgbouncer.supabase.local"
       },
       {
        "Name": "GOTRUE_DB_PORT",
        "Value": "6432"
       },
       {
        "Name": "GOTRUE_DB_USER",
        "Value": "postgres"
       },
       {
        "Name": "DISABLE_SIGNUP",
        "Value": "false"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "wget --no-verbose --tries=1 --spider http://localhost:9999/health || exit 1"
       ],
       "Interval": 30,
       "Retries": 3,
       "Timeout": 5
      },
      "Image": "supabase/gotrue:v2.170.0",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabaseGotrueTaskDefSupabaseGotrueLogGroup40A13AAA"
        },
        "awslogs-stream-prefix": "supabase-gotrue",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabaseGotrue",
      "PortMappings": [
       {
        "ContainerPort": 9999,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "GOTRUE_DB_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "GOTRUE_JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "SERVICE_ROLE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabaseGotrueTaskDefDCE44C78",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseGotrueTaskDef/Resource"
   }
  },
  "SupabaseGotrueTaskDefSupabaseGotrueLogGroup40A13AAA": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseGotrueTaskDef/SupabaseGotrue/LogGroup/Resource"
   }
  },
  "SupabaseGotrueService284F1C38": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 300,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabaseGotrueServiceCloudmapServiceF8604CB7",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabaseGotrueTaskDef2D300A6F"
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseGotrueService/Service"
   }
  },
  "SupabaseGotrueServiceCloudmapServiceF8604CB7": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "auth",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseGotrueService/CloudmapService/Resource"
   }
  },
  "SupabasePostgrestTaskDefF7085D40": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRES_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "POSTGRES_USER",
        "Value": "postgres"
       },
       {
        "Name": "POSTGRES_DB",
        "Value": "postgres"
       },
       {
        "Name": "REGION",
        "Value": "us-east-2"
       },
       {
        "Name": "SUPABASE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "ADDITIONAL_REDIRECT_URLS",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "API_EXTERNAL_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "PGRST_DB_URI",
        "Value": "postgres://postgres:${PGPASSWORD}@pgbouncer.supabase.local:6432/postgres"
       },
       {
        "Name": "PGRST_DB_SCHEMA",
        "Value": "public"
       },
       {
        "Name": "PGRST_DB_ANON_ROLE",
        "Value": "anon"
       },
       {
        "Name": "PGRST_DB_USE_LEGACY_GUCS",
        "Value": "false"
       },
       {
        "Name": "PGRST_SERVER_PORT",
        "Value": "3000"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -f http://localhost:3000/ || exit 1"
       ],
       "Interval": 30,
       "Retries": 3,
       "Timeout": 5
      },
      "Image": "postgrest/postgrest:v12.2.8",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabasePostgrestTaskDefSupabasePostgrestLogGroup80BDB325"
        },
        "awslogs-stream-prefix": "supabase-postgrest",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabasePostgrest",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "PGPASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "PGRST_JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "SERVICE_ROLE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabasePostgrestTaskDefD9A36F69",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgrestTaskDef/Resource"
   }
  },
  "SupabasePostgrestTaskDefSupabasePostgrestLogGroup80BDB325": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgrestTaskDef/SupabasePostgrest/LogGroup/Resource"
   }
  },
  "SupabasePostgrestServiceD9B6553E": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 300,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabasePostgrestServiceCloudmapServiceB34DCFA8",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabasePostgrestTaskDefF7085D40"
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgrestService/Service"
   }
  },
  "SupabasePostgrestServiceCloudmapServiceB34DCFA8": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "rest",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabasePostgrestService/CloudmapService/Resource"
   }
  },
  "SupabaseRealtimeTaskDef61C20B39": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRES_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "POSTGRES_USER",
        "Value": "postgres"
       },
       {
        "Name": "POSTGRES_DB",
        "Value": "postgres"
       },
       {
        "Name": "REGION",
        "Value": "us-east-2"
       },
       {
        "Name": "SUPABASE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "ADDITIONAL_REDIRECT_URLS",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "API_EXTERNAL_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "PORT",
        "Value": "4000"
       },
       {
        "Name": "DB_HOST",
        "Value": "pgbouncer.supabase.local"
       },
       {
        "Name": "DB_PORT",
        "Value": "6432"
       },
       {
        "Name": "DB_NAME",
        "Value": "postgres"
       },
       {
        "Name": "DB_USER",
        "Value": "postgres"
       },
       {
        "Name": "DB_SSL",
        "Value": "false"
       },
       {
        "Name": "SECURE_CHANNELS",
        "Value": "false"
       },
       {
        "Name": "REPLICATION_MODE",
        "Value": "RLS"
       },
       {
        "Name": "REPLICATION_POLL_INTERVAL",
        "Value": "100"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -f http://localhost:4000/healthz || exit 1"
       ],
       "Interval": 30,
       "Retries": 3,
       "Timeout": 5
      },
      "Image": "supabase/realtime:v2.34.43",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabaseRealtimeTaskDefSupabaseRealtimeLogGroup07E7B687"
        },
        "awslogs-stream-prefix": "supabase-realtime",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabaseRealtime",
      "PortMappings": [
       {
        "ContainerPort": 4000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "DB_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "API_JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "SERVICE_ROLE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabaseRealtimeTaskDefED19691F",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseRealtimeTaskDef/Resource"
   }
  },
  "SupabaseRealtimeTaskDefSupabaseRealtimeLogGroup07E7B687": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseRealtimeTaskDef/SupabaseRealtime/LogGroup/Resource"
   }
  },
  "SupabaseRealtimeService689C04CD": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 300,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabaseRealtimeServiceCloudmapServiceE28C95A2",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabaseRealtimeTaskDef61C20B39"
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseRealtimeService/Service"
   }
  },
  "SupabaseRealtimeServiceCloudmapServiceE28C95A2": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "realtime",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseRealtimeService/CloudmapService/Resource"
   }
  },
  "SupabaseMetaTaskDef621F5592": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRES_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "POSTGRES_USER",
        "Value": "postgres"
       },
       {
        "Name": "POSTGRES_DB",
        "Value": "postgres"
       },
       {
        "Name": "REGION",
        "Value": "us-east-2"
       },
       {
        "Name": "SUPABASE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "ADDITIONAL_REDIRECT_URLS",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "API_EXTERNAL_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "PG_META_PORT",
        "Value": "8080"
       },
       {
        "Name": "PG_META_DB_HOST",
        "Value": "pgbouncer.supabase.local"
       },
       {
        "Name": "PG_META_DB_PORT",
        "Value": "6432"
       },
       {
        "Name": "PG_META_DB_NAME",
        "Value": "postgres"
       },
       {
        "Name": "PG_META_DB_USER",
        "Value": "postgres"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -f http://localhost:8080/health || exit 1"
       ],
       "Interval": 30,
       "Retries": 3,
       "Timeout": 5
      },
      "Image": "supabase/postgres-meta:v0.87.1",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabaseMetaTaskDefSupabaseMetaLogGroup973B9A17"
        },
        "awslogs-stream-prefix": "supabase-meta",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabaseMeta",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "PG_META_DB_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "SERVICE_ROLE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabaseMetaTaskDefAE135590",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseMetaTaskDef/Resource"
   }
  },
  "SupabaseMetaTaskDefSupabaseMetaLogGroup973B9A17": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseMetaTaskDef/SupabaseMeta/LogGroup/Resource"
   }
  },
  "SupabaseMetaService71A8D970": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 300,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabaseMetaServiceCloudmapService630477A8",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabaseMetaTaskDef621F5592"
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseMetaService/Service"
   }
  },
  "SupabaseMetaServiceCloudmapService630477A8": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "meta",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseMetaService/CloudmapService/Resource"
   }
  },
  "SupabaseStudioTaskDef1AEFDD97": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRES_HOST",
        "Value": {
         "Fn::GetAtt": [
          "SupabasePostgres0313787B",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "POSTGRES_USER",
        "Value": "postgres"
       },
       {
        "Name": "POSTGRES_DB",
        "Value": "postgres"
       },
       {
        "Name": "REGION",
        "Value": "us-east-2"
       },
       {
        "Name": "SUPABASE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "ADDITIONAL_REDIRECT_URLS",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "API_EXTERNAL_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "STUDIO_PG_META_URL",
        "Value": "http://meta.supabase.local:8080"
       },
       {
        "Name": "SUPABASE_PUBLIC_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "SUPABASE_RESTURL",
        "Value": "http://rest.supabase.local:3000"
       },
       {
        "Name": "SUPABASE_REALTIMEURL",
        "Value": "http://realtime.supabase.local:4000"
       },
       {
        "Name": "SUPABASE_AUTHURL",
        "Value": "http://auth.supabase.local:9999"
       },
       {
        "Name": "NEXT_PUBLIC_SITE_URL",
        "Value": "https://supabase.eastmedical.ai"
       },
       {
        "Name": "DEFAULT_ORGANIZATION_NAME",
        "Value": "Default Organization"
       },
       {
        "Name": "DASHBOARD_USERNAME",
        "Value": "supabase"
       },
       {
        "Name": "DASHBOARD_PASSWORD",
        "Value": "supabase_strong_password"
       },
       {
        "Name": "STUDIO_PORT",
        "Value": "3000"
       },
       {
        "Name": "NODE_OPTIONS",
        "Value": "--dns-result-order=ipv4first"
       },
       {
        "Name": "DEBUG",
        "Value": "true"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -f http://localhost:3000/ || exit 1"
       ],
       "Interval": 120,
       "Retries": 10,
       "StartPeriod": 300,
       "Timeout": 15
      },
      "Image": "supabase/studio:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupabaseStudioTaskDefSupabaseStudioLogGroup5DDDC40B"
        },
        "awslogs-stream-prefix": "supabase-studio",
        "awslogs-region": "us-east-2"
       }
      },
      "Name": "SupabaseStudio",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "STUDIO_ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "STUDIO_SERVICE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       },
       {
        "Name": "POSTGRES_PASSWORD",
        "ValueFrom": {
         "Ref": "SupabaseDbPassword4F5D848D"
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": {
         "Ref": "SupabaseJwtSecret4CEDF760"
        }
       },
       {
        "Name": "ANON_KEY",
        "ValueFrom": {
         "Ref": "SupabaseAnnonKey241C2469"
        }
       },
       {
        "Name": "SERVICE_ROLE_KEY",
        "ValueFrom": {
         "Ref": "SupabaseServiceRoleKey8194163D"
        }
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskExecutionRole0E31FB5D",
      "Arn"
     ]
    },
    "Family": "SupabaseStackSupabaseStudioTaskDef4D7636F1",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "SupabaseTaskRoleFF032C96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseStudioTaskDef/Resource"
   }
  },
  "SupabaseStudioTaskDefSupabaseStudioLogGroup5DDDC40B": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseStudioTaskDef/SupabaseStudio/LogGroup/Resource"
   }
  },
  "SupabaseStudioService72BC584E": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "SupabaseCluster6B350E35"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 600,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupabaseServiceSGF39DA778",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet1Subnet51E913CA1A8F0219"
       },
       {
        "Fn::ImportValue": "SharedInfrastructure:ExportsOutputRefSharedVpcprivateSubnet2Subnet50406F86A539CFDA"
       }
      ]
     }
    },
    "PlatformVersion": "LATEST",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "SupabaseStudioServiceCloudmapService9E29C4E9",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "SupabaseStudioTaskDef1AEFDD97"
    }
   },
   "DependsOn": [
    "SupabaseGotrueServiceCloudmapServiceF8604CB7",
    "SupabaseGotrueService284F1C38",
    "SupabaseMetaServiceCloudmapService630477A8",
    "SupabaseMetaService71A8D970",
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabasePostgrestServiceCloudmapServiceB34DCFA8",
    "SupabasePostgrestServiceD9B6553E",
    "SupabaseRealtimeServiceCloudmapServiceE28C95A2",
    "SupabaseRealtimeService689C04CD",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseStudioService/Service"
   }
  },
  "SupabaseStudioServiceCloudmapService9E29C4E9": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 10,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 1
    },
    "Name": "studio",
    "NamespaceId": {
     "Fn::GetAtt": [
      "SupabaseClusterDefaultServiceDiscoveryNamespace6179BE77",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "SupabaseGotrueServiceCloudmapServiceF8604CB7",
    "SupabaseGotrueService284F1C38",
    "SupabaseMetaServiceCloudmapService630477A8",
    "SupabaseMetaService71A8D970",
    "SupabasePgbouncerServiceCloudmapServiceF7A53EC4",
    "SupabasePgbouncerService72F85B7F",
    "SupabasePostgrestServiceCloudmapServiceB34DCFA8",
    "SupabasePostgrestServiceD9B6553E",
    "SupabaseRealtimeServiceCloudmapServiceE28C95A2",
    "SupabaseRealtimeService689C04CD",
    "SupabaseTaskRoleFF032C96"
   ],
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseStudioService/CloudmapService/Resource"
   }
  },
  "SupabaseDnsRecordCF5C46E4": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::Join": [
       "",
       [
        "dualstack.",
        {
         "Fn::GetAtt": [
          "SupabaseALB4990A1B5",
          "DNSName"
         ]
        }
       ]
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "SupabaseALB4990A1B5",
       "CanonicalHostedZoneID"
      ]
     }
    },
    "HostedZoneId": "Z055778020D8NH7RP81J5",
    "Name": "supabase.eastmedical.ai.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseDnsRecord/Resource"
   }
  },
  "SupabaseDashboard4E7C3C82": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePgbouncerService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabasePgbouncerService72F85B7F",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePgbouncerService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabasePgbouncerService72F85B7F",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseKongService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseKongService132F4875",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseKongService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseKongService132F4875",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseGotrueService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseGotrueService284F1C38",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseGotrueService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseGotrueService284F1C38",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePostgrestService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabasePostgrestServiceD9B6553E",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabasePostgrestService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabasePostgrestServiceD9B6553E",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseRealtimeService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseRealtimeService689C04CD",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseRealtimeService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseRealtimeService689C04CD",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseMetaService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseMetaService71A8D970",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":30,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseMetaService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseMetaService71A8D970",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseStudioService CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"CPUUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseStudioService72BC584E",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":36,\"properties\":{\"view\":\"timeSeries\",\"title\":\"SupabaseStudioService Memory Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/ECS\",\"MemoryUtilization\",\"ClusterName\",\"",
       {
        "Ref": "SupabaseCluster6B350E35"
       },
       "\",\"ServiceName\",\"",
       {
        "Fn::GetAtt": [
         "SupabaseStudioService72BC584E",
         "Name"
        ]
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Database CPU Utilization\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/RDS\",\"CPUUtilization\",\"DBInstanceIdentifier\",\"",
       {
        "Ref": "SupabasePostgres0313787B"
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Database Connections\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/RDS\",\"DatabaseConnections\",\"DBInstanceIdentifier\",\"",
       {
        "Ref": "SupabasePostgres0313787B"
       },
       "\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":42,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Database Free Storage Space\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/RDS\",\"FreeStorageSpace\",\"DBInstanceIdentifier\",\"",
       {
        "Ref": "SupabasePostgres0313787B"
       },
       "\"]],\"yAxis\":{}}}]}"
      ]
     ]
    },
    "DashboardName": "Supabase-Monitoring"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/SupabaseDashboard/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S0W7bMAz8lr4r2uJ1wF7bGBsKFFtg931gZMZVI0sGSTkIBP/7YDnJ3C7Yk+6OR0onqdDrb/d6fQdHXpnmsHJ2p1MtYA6qQg6RDCo48u9kkMTurQHBDjy0SDpt/mpqs/cLOio0hU41mkhWTj8oxH6y/F948i0h86gYDaHwdaM687OfUEZFDeu0BYIOBek6rnz8oJUgsAPGJ88C3qCq486jLBr+ES7WKQPrtHGRBSkHPMPvQC0IvgAfStxbb8UGPxk+KsELWI+00M69NdJgDc6RMpxSZ9BYNmFAOum0JTuAYOn5J3TIPcwdt+RbAy10OlXBZTWv2+CsOeUZGY0KHbBY4wI0O3DgjfXtUOj00Pduekob/HOA5jHX5mt4x5c+y4L+7LngG/Uqzid6xxe+F6B28SILOioXWtbpObTX8gWPikIU/PpFp4cKTaAmp86onr6McSE2RxDzqlMJ/LoLMHuuZBwn+itKH2VUPjSo3/jTUBR6fa8/372xtSuKXmyHuprXP3gmULtAAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "SupabaseStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "SupabaseURL": {
   "Description": "Supabase instance URL",
   "Value": "https://supabase.eastmedical.ai",
   "Export": {
    "Name": "SupabaseURL"
   }
  },
  "DockerHubSecretArn": {
   "Description": "ARN of the secret containing Docker Hub credentials",
   "Value": {
    "Fn::Join": [
     "",
     [
      "arn:",
      {
       "Ref": "AWS::Partition"
      },
      ":secretsmanager:us-east-2:302263086944:secret:supabase/dockerhub-credentials"
     ]
    ]
   },
   "Export": {
    "Name": "DockerHubSecretArn"
   }
  },
  "PostgresEndpoint": {
   "Description": "PostgreSQL database endpoint",
   "Value": {
    "Fn::GetAtt": [
     "SupabasePostgres0313787B",
     "Endpoint.Address"
    ]
   },
   "Export": {
    "Name": "SupabasePostgresEndpoint"
   }
  },
  "PgBouncerEndpointOutput": {
   "Description": "Connection pooler endpoint (internal)",
   "Value": "pgbouncer.supabase.local:6432",
   "Export": {
    "Name": "SupabasePgBouncerEndpoint"
   }
  },
  "SupabaseNamespace": {
   "Description": "Service discovery namespace",
   "Value": "supabase.local",
   "Export": {
    "Name": "SupabaseNamespaceName"
   }
  },
  "SupabaseDbPasswordSecretArn": {
   "Description": "ARN of the secret containing the Supabase database password",
   "Value": {
    "Ref": "SupabaseDbPassword4F5D848D"
   },
   "Export": {
    "Name": "SupabaseDbPasswordSecretArn"
   }
  },
  "SupabaseJwtSecretArn": {
   "Description": "ARN of the secret containing the Supabase JWT secret",
   "Value": {
    "Ref": "SupabaseJwtSecret4CEDF760"
   },
   "Export": {
    "Name": "SupabaseJwtSecretArn"
   }
  },
  "SupabaseAnnonKeySecretArn": {
   "Description": "ARN of the secret containing the Supabase Anon Key",
   "Value": {
    "Ref": "SupabaseAnnonKey241C2469"
   },
   "Export": {
    "Name": "SupabaseAnnonKeySecretArn"
   }
  },
  "SupabaseServiceRoleKeySecretArn": {
   "Description": "ARN of the secret containing the Supabase Service Role Key",
   "Value": {
    "Ref": "SupabaseServiceRoleKey8194163D"
   },
   "Export": {
    "Name": "SupabaseServiceRoleKeySecretArn"
   }
  },
  "SupabaseCertificateArn": {
   "Description": "ARN of the certificate for Supabase",
   "Value": {
    "Ref": "SupabaseCertificate2E339463"
   },
   "Export": {
    "Name": "SupabaseCertificateArn"
   }
  },
  "SupabasePgbouncerServiceOutput": {
   "Description": "Supabase pgbouncer service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabasePgbouncerService72F85B7F",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabasePgbouncerServiceName"
   }
  },
  "SupabaseKongServiceOutput": {
   "Description": "Supabase kong service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabaseKongService132F4875",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabaseKongServiceName"
   }
  },
  "SupabaseAuthServiceOutput": {
   "Description": "Supabase auth service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabaseGotrueService284F1C38",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabaseAuthServiceName"
   }
  },
  "SupabaseRestServiceOutput": {
   "Description": "Supabase rest service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabasePostgrestServiceD9B6553E",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabaseRestServiceName"
   }
  },
  "SupabaseRealtimeServiceOutput": {
   "Description": "Supabase realtime service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabaseRealtimeService689C04CD",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabaseRealtimeServiceName"
   }
  },
  "SupabaseMetaServiceOutput": {
   "Description": "Supabase meta service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabaseMetaService71A8D970",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabaseMetaServiceName"
   }
  },
  "SupabaseStudioServiceOutput": {
   "Description": "Supabase studio service name",
   "Value": {
    "Fn::GetAtt": [
     "SupabaseStudioService72BC584E",
     "Name"
    ]
   },
   "Export": {
    "Name": "SupabaseStudioServiceName"
   }
  },
  "SupabaseDashboardURL": {
   "Description": "URL to the Supabase CloudWatch dashboard",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://console.aws.amazon.com/cloudwatch/home?region=us-east-2#dashboards:name=",
      {
       "Ref": "SupabaseDashboard4E7C3C82"
      }
     ]
    ]
   },
   "Export": {
    "Name": "SupabaseDashboardURL"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}