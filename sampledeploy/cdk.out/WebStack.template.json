{
 "Resources": {
  "RegionalCertificate5C8CFF45": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "api.eastmedical.ai",
    "DomainValidationOptions": [
     {
      "DomainName": "api.eastmedical.ai",
      "HostedZoneId": "Z055778020D8NH7RP81J5"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "WebStack/RegionalCertificate"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/RegionalCertificate/Resource"
   }
  },
  "UIBucketB980636D": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "eastmedical.ai-ui",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET"
       ],
       "AllowedOrigins": [
        "https://app.eastmedical.ai"
       ],
       "MaxAge": 3000
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:a4e50a79",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/UIBucket/Resource"
   }
  },
  "UIBucketPolicy3F03C682": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UIBucketB980636D"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UIBucketB980636D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UIBucketB980636D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UIBucketB980636D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UIBucketB980636D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "UIDistributionOrigin1S3Origin80D2A7D1",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UIBucketB980636D",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetObject",
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:aws:cloudfront::302263086944:distribution/",
            {
             "Ref": "UIDistribution2F12206B"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UIBucketB980636D",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/UIBucket/Policy/Resource"
   }
  },
  "UIBucketAutoDeleteObjectsCustomResource7CECA018": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UIBucketB980636D"
    }
   },
   "DependsOn": [
    "UIBucketPolicy3F03C682"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/UIBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "UIBucketB980636D"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "UICachePolicy055D3077": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "DefaultTTL": 3600,
     "MaxTTL": 86400,
     "MinTTL": 300,
     "Name": "WebStackUICachePolicy384800EE-us-east-2",
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": true,
      "EnableAcceptEncodingGzip": true,
      "HeadersConfig": {
       "HeaderBehavior": "whitelist",
       "Headers": [
        "Authorization"
       ]
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "all"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/UICachePolicy/Resource"
   }
  },
  "UIDistributionOrigin1S3Origin80D2A7D1": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Identity for WebStackUIDistributionOrigin1719B9F43"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/UIDistribution/Origin1/S3Origin/Resource"
   }
  },
  "UIDistribution2F12206B": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      "app.eastmedical.ai"
     ],
     "CustomErrorResponses": [
      {
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachePolicyId": {
       "Ref": "UICachePolicy055D3077"
      },
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "TargetOriginId": "WebStackUIDistributionOrigin1719B9F43",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2and3",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "UIBucketB980636D",
         "RegionalDomainName"
        ]
       },
       "Id": "WebStackUIDistributionOrigin1719B9F43",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "UIDistributionOrigin1S3Origin80D2A7D1"
           }
          ]
         ]
        }
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Fn::GetAtt": [
        "ExportsReader8B249524",
        "/cdk/exports/Web/WhisperProcessingCertificateuseast1RefCertificate4E7ABB08B6A78DF3"
       ]
      },
      "MinimumProtocolVersion": "TLSv1.2_2021",
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/UIDistribution/Resource"
   }
  },
  "UIDeploymentAwsCliLayer90F5818D": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
     "S3Key": "1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/UIDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.1c5a2ab1d1e53b0672a644454aab3dbb258ccd0079c92ad0e23b95b2c2079f70.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "UIDeploymentCustomResource1024MiB7298592A": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBB049752D",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-302263086944-us-east-2"
    ],
    "SourceObjectKeys": [
     "10772a146f94c0d041a4b0c78f3514d712a779c09573e8ad265c3cea348a051d.zip"
    ],
    "DestinationBucketName": {
     "Ref": "UIBucketB980636D"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "UIDistribution2F12206B"
    },
    "DistributionPaths": [
     "/*"
    ],
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/UIDeployment/CustomResource-1024MiB/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::cdk-hnb659fds-assets-302263086944-us-east-2"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::cdk-hnb659fds-assets-302263086944-us-east-2/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UIBucketB980636D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UIBucketB980636D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:GetInvalidation",
        "cloudfront:CreateInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBB049752D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
     "S3Key": "c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "UIDeploymentAwsCliLayer90F5818D"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiB/Resource",
    "aws:asset:path": "asset.c6358465bf49dfae556bb430bf9c81fa578c221b82c308e3707901b1dd654762",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UIARecordB5B8EE44": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "UIDistribution2F12206B",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z055778020D8NH7RP81J5",
    "Name": "app.eastmedical.ai.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/UIARecord/Resource"
   }
  },
  "AppCredentials06DBAC7C": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Credentials for the application",
    "GenerateSecretString": {
     "GenerateStringKey": "dummy",
     "SecretStringTemplate": "{\"SUPABASE_URL\":\"\",\"SUPABASE_KEY\":\"\",\"SUPABASE_SERVICE_ROLE_KEY\":\"\",\"OPENAI_API_KEY\":\"\",\"API_TOKEN\":\"\"}"
    },
    "Name": "app-credentials"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/AppCredentials/Resource"
   }
  },
  "APIFunctionServiceRole411B6D35": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/APIFunction/ServiceRole/Resource"
   }
  },
  "APIFunctionServiceRoleDefaultPolicy55C0651E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AppCredentials06DBAC7C"
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::whisperprocessing-files"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::whisperprocessing-files/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "WhisperProcessing:ExportsOutputFnGetAttWhisperProcessingQueue902D22B9Arn9F894375"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "APIFunctionServiceRoleDefaultPolicy55C0651E",
    "Roles": [
     {
      "Ref": "APIFunctionServiceRole411B6D35"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/APIFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "APIFunction49CD189B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
     "S3Key": "a8add8f02d2fa0d7f215b39d4944e3bf4add2360fd618dfb78821ffde0c78538.zip"
    },
    "Description": "Lambda function serving the API",
    "Environment": {
     "Variables": {
      "NODE_ENV": "production",
      "S3_BUCKET_NAME": "whisperprocessing-files",
      "WHISPER_QUEUE_URL": {
       "Fn::ImportValue": "WhisperProcessing:ExportsOutputRefWhisperProcessingQueue902D22B9313A56D8"
      },
      "APP_SECRET_ARN": {
       "Ref": "AppCredentials06DBAC7C"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 1536,
    "Role": {
     "Fn::GetAtt": [
      "APIFunctionServiceRole411B6D35",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 300,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "APIFunctionServiceRoleDefaultPolicy55C0651E",
    "APIFunctionServiceRole411B6D35"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/APIFunction/Resource",
    "aws:asset:path": "asset.a8add8f02d2fa0d7f215b39d4944e3bf4add2360fd618dfb78821ffde0c78538",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "APIFunctionLogRetentionE8A704D9": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "APIFunction49CD189B"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/APIFunction/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs20.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ApiLogGroup1DEDFC07": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "APIFunction49CD189B"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/ApiLogGroup/Resource"
   }
  },
  "API62EA1CFF": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "EastMedical API"
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Resource"
   }
  },
  "APICloudWatchRole927CEB3B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebStack/API/CloudWatchRole/Resource"
   }
  },
  "APIAccountD065B313": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "APICloudWatchRole927CEB3B",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "API62EA1CFF"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Account"
   }
  },
  "APIDeployment0E06874E6adc7a0f411c03397d9ec1a93bc9e378": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "DependsOn": [
    "APIproxyANY181E6698",
    "APIproxyOPTIONS62216A87",
    "APIproxy35016696",
    "APIANY77077448",
    "APIOPTIONSCA9FDA90"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Deployment/Resource"
   }
  },
  "APIDeploymentStageprod278E75BA": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "APIDeployment0E06874E6adc7a0f411c03397d9ec1a93bc9e378"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "API62EA1CFF"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "APIAccountD065B313"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/API/DeploymentStage.prod/Resource"
   }
  },
  "APICustomDomain7C8980EC": {
   "Type": "AWS::ApiGateway::DomainName",
   "Properties": {
    "DomainName": "api.eastmedical.ai",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "RegionalCertificateArn": {
     "Ref": "RegionalCertificate5C8CFF45"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/CustomDomain/Resource"
   }
  },
  "APICustomDomainMapWebStackAPIF1F342DE9F5E9822": {
   "Type": "AWS::ApiGateway::BasePathMapping",
   "Properties": {
    "DomainName": {
     "Ref": "APICustomDomain7C8980EC"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    },
    "Stage": {
     "Ref": "APIDeploymentStageprod278E75BA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/CustomDomain/Map:--=>WebStackAPIF1F342DE/Resource"
   }
  },
  "APIOPTIONSCA9FDA90": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://eastmedical.ai'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.eastmedical.ai\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/OPTIONS/Resource"
   }
  },
  "APIproxy35016696": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/{proxy+}/Resource"
   }
  },
  "APIproxyOPTIONS62216A87": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://eastmedical.ai'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.eastmedical.ai\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "APIproxy35016696"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/{proxy+}/OPTIONS/Resource"
   }
  },
  "APIproxyANYApiPermissionWebStackAPIF1F342DEANYproxy5990D64F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "APIFunction49CD189B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-2:302263086944:",
       {
        "Ref": "API62EA1CFF"
       },
       "/",
       {
        "Ref": "APIDeploymentStageprod278E75BA"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/{proxy+}/ANY/ApiPermission.WebStackAPIF1F342DE.ANY..{proxy+}"
   }
  },
  "APIproxyANYApiPermissionTestWebStackAPIF1F342DEANYproxyBD0B2C35": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "APIFunction49CD189B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-2:302263086944:",
       {
        "Ref": "API62EA1CFF"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/{proxy+}/ANY/ApiPermission.Test.WebStackAPIF1F342DE.ANY..{proxy+}"
   }
  },
  "APIproxyANY181E6698": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      },
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "SelectionPattern": ".*ERROR.*",
       "StatusCode": "500"
      }
     ],
     "TimeoutInMillis": 29000,
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "APIFunction49CD189B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     },
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "500"
     }
    ],
    "ResourceId": {
     "Ref": "APIproxy35016696"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/{proxy+}/ANY/Resource"
   }
  },
  "APIANY77077448": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "Type": "MOCK"
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/API/Default/ANY/Resource"
   }
  },
  "ApiErrorAlarmD3E841A2": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ActionsEnabled": true,
    "AlarmDescription": "API has high error rate",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "ApiName",
      "Value": "EastMedical API"
     },
     {
      "Name": "Stage",
      "Value": "prod"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "5XXError",
    "Namespace": "AWS/ApiGateway",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/ApiErrorAlarm/Resource"
   }
  },
  "APIARecord58BC377E": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "APICustomDomain7C8980EC",
       "RegionalDomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "APICustomDomain7C8980EC",
       "RegionalHostedZoneId"
      ]
     }
    },
    "HostedZoneId": "Z055778020D8NH7RP81J5",
    "Name": "api.eastmedical.ai.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/APIARecord/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSTW/bMAz9Lb0r2pK2wK6ugw4D0jZwgF0DRmYcNrJkSFS9QPB/HySnsVFsJ75HUeTjx0oufzzI5R30fqHq80LTQcYdgzqLCr0NTqGA3u+jQsd0JAWMLRho0MlYTj5RHs2MDsLfy/gU1Bk5PV3RaLZWk7pM7isfyRN4HITSNtRHZw3LWII64fRnTtfk2dEhMFkj3hw1ZAql0PtfNRomHj+kXM8p1/8i5mmS8n2ssdP20qJhOcpa3xwCvEf2skhmEBraQw0ylkezgQu63+h8UrMj02hka56DUVnfDZRHM8dbdC15n2sTtDJWVud5Zjs1PqJBOBsYH+9lLCpU1tU5NKNdEuRROWR/W9Iu8xQ0okFo23gZN7apkNMQrBEb2/x0NnQp7BMPAjpqgLGHi4wVei46GovdYKGUDYbFbDxpnhPbMTS5mRGsbQtkXqHNvhlLa98Cn16g68g0+Ti+uD7vMfnFC/LJ5tavaOvsn8vtZEeVGV+PqQdWJxkLDa7NyhMYBlEGz7b918cvT1tnP6hGl8vn5aeWkrDxBPY6rX8PvVeaZNH7UlO+iCxyaustcBd4EMbWKN/9t4/VSi4f5Pe7d0+0cMEwtSir0f4FmskWCJ8DAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/CDKMetadata/Default"
   }
  },
  "ExportsReader8B249524": {
   "Type": "Custom::CrossRegionExportReader",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68",
      "Arn"
     ]
    },
    "ReaderProps": {
     "region": "us-east-2",
     "prefix": "Web",
     "imports": {
      "/cdk/exports/Web/WhisperProcessingCertificateuseast1RefCertificate4E7ABB08B6A78DF3": "{{resolve:ssm:/cdk/exports/Web/WhisperProcessingCertificateuseast1RefCertificate4E7ABB08B6A78DF3}}"
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/ExportsReader/Resource/Default"
   }
  },
  "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":ssm:us-east-2:302263086944:parameter/cdk/exports/Web/*"
           ]
          ]
         },
         "Action": [
          "ssm:AddTagsToResource",
          "ssm:RemoveTagsFromResource",
          "ssm:GetParameters"
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::CrossRegionExportReaderCustomResourceProvider/Role"
   }
  },
  "CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-302263086944-us-east-2",
     "S3Key": "d41c8e6342cd078b5ea5aec11522bdb605eae00f4bb98a3fb0b44c827e9b5ca9.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/Custom::CrossRegionExportReaderCustomResourceProvider/Handler",
    "aws:asset:path": "asset.d41c8e6342cd078b5ea5aec11522bdb605eae00f4bb98a3fb0b44c827e9b5ca9",
    "aws:asset:property": "Code"
   }
  }
 },
 "Mappings": {
  "AWSCloudFrontPartitionHostedZoneIdMap": {
   "aws": {
    "zoneId": "Z2FDTNDATAQYW2"
   },
   "aws-cn": {
    "zoneId": "Z3RFFRIM2A3IF5"
   }
  }
 },
 "Outputs": {
  "APIStackIdentifier": {
   "Description": "Identifier for the WhisperProcessing stack that contains API components",
   "Value": "WhisperProcessingStack"
  },
  "APIEndpoint1793E782": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "API62EA1CFF"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "APIDeploymentStageprod278E75BA"
      },
      "/"
     ]
    ]
   }
  },
  "UIURL": {
   "Description": "UI application URL",
   "Value": "https://app.eastmedical.ai",
   "Export": {
    "Name": "WebUIURL"
   }
  },
  "APIURL": {
   "Description": "API endpoint URL",
   "Value": "https://api.eastmedical.ai",
   "Export": {
    "Name": "WebAPIURL"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}